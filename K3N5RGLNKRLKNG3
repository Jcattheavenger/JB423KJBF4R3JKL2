-- $$\   $$\ $$$$$$\ $$\   $$\ $$$$$$$$\ $$\       $$$$$$\ $$\    $$\ $$$$$$$$\  $$$$$$\
-- $$$\  $$ |\_$$  _|$$$\  $$ |$$  _____|$$ |      \_$$  _|$$ |   $$ |$$  _____|$$  __$$\ 
-- $$$$\ $$ |  $$ |  $$$$\ $$ |$$ |      $$ |        $$ |  $$ |   $$ |$$ |      $$ /  \__|
-- $$ $$\$$ |  $$ |  $$ $$\$$ |$$$$$\    $$ |        $$ |  \$$\  $$  |$$$$$\    \$$$$$$\  
-- $$ \$$$$ |  $$ |  $$ \$$$$ |$$  __|   $$ |        $$ |   \$$\$$  / $$  __|    \____$$\ 
-- $$ |\$$$ |  $$ |  $$ |\$$$ |$$ |      $$ |        $$ |    \$$$  /  $$ |      $$\   $$ |
-- $$ | \$$ |$$$$$$\ $$ | \$$ |$$$$$$$$\ $$$$$$$$\ $$$$$$\    \$  /   $$$$$$$$\ \$$$$$$  |
-- \__|  \__|\______|\__|  \__|\________|\________|\______|    \_/    \________| \______/ 

---<Load>---

local Version = "v1.7.6" -- text for refrencing version

local function CreateNotification(stringText, intDuration, stringButton) -- function for creating default roblox notifications
	game:GetService("StarterGui"):SetCore("SendNotification", { -- get starter gui and create notif
		Title = "Ninelives "..Version.."", -- notif title
		Text = stringText, -- notif text
		Duration = intDuration, -- notif length
		Button1 = stringButton -- notif button
	})
end

CreateNotification("Initializing...", 4) -- start initializing

Owned = game.Players.LocalPlayer:IsInGroup(11625744) -- if player is in group (can also do owns gamepass)
Bypass = false -- if true all players become whitelisted

wait(1) -- wait one second so roblox has time to check
CreateNotification("Loading...", 4) -- in loading get player ids for whitelist and blacklist

Whitelists = { -- even if owned is false these players will still be whitelisted by their roblox id
	1, -- Your id here
	2, -- Extra
	3, -- Extra
}

Blacklists = { -- kicks player from game
	1, -- Works if you want
}

wait(2) -- wait two seconds to get all ids and load them
CreateNotification("Checking Whitelist...", 4) -- check the actual whitelist
wait(1) -- wait one for effect

if game.Players.LocalPlayer.UserId == Blacklists[1] then -- if player id is blacklisted
	game.Players.LocalPlayer:Kick("Blacklisted from Ninelives.") -- kick player and print message on screen
elseif Owned or game.Players.LocalPlayer.UserId == Whitelists[1] or game.Players.LocalPlayer.UserId == Whitelists[2] or game.Players.LocalPlayer.UserId == Whitelists[3] or Bypass then -- if owned or whitelisted or bypass
	print("Whitelisted!") -- print to console
	CreateNotification("Loaded!") -- load
else
	print("Whitelist failed") -- print to console
	CreateNotification("Whitelist failed, join group HvH legends", math.huge, "Dismiss") -- do not load
	while wait(1) do
	end
end

function PlaySound() -- make startup sound
	local Sound = Instance.new("Sound", game:GetService("Workspace")) -- sound instance
	Sound.SoundId = "rbxassetid://6887181639" -- sound id
	Sound.Volume = 1 -- volume
	Sound.PlayOnRemove = true -- play when removed
	Sound:Destroy() -- remove
end
PlaySound() -- play sound

---<Variables>---

Left = 0.25 -- for tab outlines
Right = 0.75

Seconds = 0 -- for watermark
Minutes = 0
Hours = 0

NameIndex = 1 -- for console
PosIndex = 0.02
Counter = 0

waitingforKey = false -- for aimbot

VectorCenter = Vector2.new(0.5, 0.5) -- basic variables
UDimCenter = UDim2.new(0.5, 0, 0.5, 0)
UDimFull = UDim2.new(1, 0, 1, 0)
Players = game:GetService("Players")
LocalPlayer = Players.LocalPlayer
Mouse = LocalPlayer:GetMouse()
UserInputService = game:GetService("UserInputService")

Black = Color3.fromRGB(0, 0, 0) -- colors
White = Color3.fromRGB(255, 255, 255)
Red = Color3.fromRGB(255, 0, 0)
Green = Color3.fromRGB(0, 175, 0)
Blue = Color3.fromRGB(0, 0, 255)
Cyan = Color3.fromRGB(0, 255, 255)
Yellow = Color3.fromRGB(255, 255, 0)
Pink = Color3.fromRGB(255, 0, 255)
lPink = Color3.fromRGB(255, 100, 255)
TrueGreen = Color3.fromRGB(0, 255 ,0)
Purple = Color3.fromRGB(176, 38, 255)
Orange = Color3.fromRGB(255, 165, 0)
lBlack = Color3.fromRGB(25, 25, 25)
dBlack = Color3.fromRGB(15, 15, 15)
dWhite = Color3.fromRGB(230, 230, 230)
lGrey = Color3.fromRGB(150, 150, 150)
lmGrey = Color3.fromRGB(200, 200, 200)
Shadow = Color3.fromRGB(46, 26, 71)

CurrentTextColor = White -- for light mode
CurrentPrimaryColor = lBlack
CurrentSecondaryColor = dBlack
CurrentTertiaryColor = lGrey

Settings = { -- option settings
	NameEsp = false, -- visual options
	BoxEsp = false,
	ChamsEsp = false,
	HealthEsp = false,
	AimBoneEsp = false,
	EspTeamCheck = true,
	ChamsOpacity = 5,
	ChamsOpacityTranslation = 0,

	Aimbot = false, -- legit options
	AimbotAiming = false,
	AimbotTeamCheck = true,
	AimbotKey = nil,
	AimbotSmoothing = 0,
	ActualSpeed = 0.05,
	AimBone = "Head",

	AntiAim = false, -- rage options
	AntiAimFlip = false,
	AntiAimSpinSpeed = 90,
	AntiAimFlipFrequency = 3,
	AntiAimFlipSpeed = 0.6,
	AntiAimFlipDist = 1,
	FakeLag = false,
	FakeLagDist = 1,
	FakeLagFrequency = 1,
	FakeLagSpeed = 0.4,
	ThirdPerson = false,
	ThirdPersonDist = 10,
	CamDist = 40,

	ChatSpam = false, -- misc options
	FovValue = game.Workspace.CurrentCamera.FieldOfView,

	ActiveTab = nil, -- color options
	LightMode = false,
	Rainbow = false
}

Colors = { -- color settings
	NameEspColor = White,
	BoxEspColor = White,
	ChamsEspColor = White,
	AimBoneEspColor = White,
	CrosshairColor = White,
	ConsoleColor = Black,
	AccentColor = lPink -- menu and other colors
}

---<Instances>---

local Contents = Instance.new("Folder", LocalPlayer.PlayerGui) -- folder for menu

local MenuGui = Instance.new("ScreenGui", Contents) -- main uis
local WatermarkGui = Instance.new("ScreenGui",Contents)
local CrosshairGui = Instance.new("ScreenGui", Contents)

local MenuBase = Instance.new("Frame", MenuGui) -- menu items
local MenuTitle = Instance.new("TextLabel", MenuBase)
local TitleLine = Instance.new("Frame", MenuTitle)
local MenuInfoBar = Instance.new("Frame", MenuBase)

local WatermarkBase = Instance.new("TextLabel", WatermarkGui) -- watermark items
local WatermarkUICorner = Instance.new("UICorner", WatermarkBase)
local WatermarkBottomLine = Instance.new("Frame",WatermarkBase)

local Crosshair = Instance.new("ImageLabel", CrosshairGui) -- crosshair items

local PlayerAvatar = Instance.new("ImageLabel", MenuInfoBar) -- avatar on menu
local PlayerAvatarUICorner = Instance.new("UICorner", PlayerAvatar)

local InfoBarVisualsButton = Instance.new("TextButton", MenuInfoBar) -- tab buttons
local InfoBarLegitButton = Instance.new("TextButton", MenuInfoBar)
local InfoBarRageButton = Instance.new("TextButton", MenuInfoBar)
local InfoBarMiscButton = Instance.new("TextButton", MenuInfoBar)
local InfoBarColorsButton = Instance.new("TextButton", MenuInfoBar)

local MenuVisualsTab = Instance.new("Frame", MenuBase) -- tabs
local MenuLegitTab = Instance.new("Frame", MenuBase)
local MenuRageTab = Instance.new("Frame", MenuBase)
local MenuMiscTab = Instance.new("Frame", MenuBase)
local MenuColorsTab = Instance.new("Frame", MenuBase)

local VisualsTabOutline1 = Instance.new("Frame", MenuVisualsTab) -- tab outlines
local VisualsTabOutline2 = Instance.new("Frame", MenuVisualsTab)
local LegitTabOutline1 = Instance.new("Frame", MenuLegitTab)
local LegitTabOutline2 = Instance.new("Frame", MenuLegitTab)
local LegitTabOutline3 = Instance.new("Frame", MenuLegitTab)
local RageTabOutline1 = Instance.new("Frame", MenuRageTab)
local RageTabOutline2 = Instance.new("Frame", MenuRageTab)
local MiscTabOutline1 = Instance.new("Frame", MenuMiscTab)
local MiscTabOutline2 = Instance.new("Frame", MenuMiscTab)
local ColorsTabOutline1 = Instance.new("Frame", MenuColorsTab)
local ColorsTabOutline2 = Instance.new("Frame", MenuColorsTab)
local ColorsTabOutline3 = Instance.new("Frame", MenuColorsTab)

local VisualsTabOutline1Title = Instance.new("TextLabel", VisualsTabOutline1) -- outline titles
local VisualsTabOutline2Title = Instance.new("TextLabel", VisualsTabOutline2)
local LegitTabOutline1Title = Instance.new("TextLabel", LegitTabOutline1)
local LegitTabOutline2Title = Instance.new("TextLabel", LegitTabOutline2)
local LegitTabOutline3Title = Instance.new("TextLabel", LegitTabOutline3)
local RageTabOutline1Title = Instance.new("TextLabel", RageTabOutline1)
local RageTabOutline2Title = Instance.new("TextLabel", RageTabOutline2)
local MiscTabOutline1Title = Instance.new("TextLabel", MiscTabOutline1)
local MiscTabOutline2Title = Instance.new("TextLabel", MiscTabOutline2)
local ColorsTabOutline1Title = Instance.new("TextLabel", ColorsTabOutline1)
local ColorsTabOutline2Title = Instance.new("TextLabel", ColorsTabOutline2)
local ColorsTabOutline3Title = Instance.new("TextLabel", ColorsTabOutline3)

local NameEspToggle = Instance.new("TextButton", VisualsTabOutline1) -- esp options
local NameEspToggleTitle = Instance.new("TextLabel", NameEspToggle)
local BoxEspToggle = Instance.new("TextButton", VisualsTabOutline1)
local BoxEspToggleTitle = Instance.new("TextLabel", BoxEspToggle)
local ChamsEspToggle = Instance.new("TextButton", VisualsTabOutline1)
local ChamsEspToggleTitle = Instance.new("TextLabel", ChamsEspToggle)
local HealthEspToggle = Instance.new("TextButton", VisualsTabOutline1)
local HealthEspToggleTitle = Instance.new("TextLabel", HealthEspToggle)
local AimBoneEspToggle = Instance.new("TextButton", VisualsTabOutline1)
local AimBoneEspToggleTitle = Instance.new("TextLabel", AimBoneEspToggle)
local EspTeamCheckToggle = Instance.new("TextButton", VisualsTabOutline2)
local EspTeamCheckToggleTitle = Instance.new("TextLabel", EspTeamCheckToggle)
local ChamsOpacityTextBox = Instance.new("TextLabel", VisualsTabOutline2)
local ChamsOpacityTextBoxTitle = Instance.new("TextLabel", ChamsOpacityTextBox)
local ChamsOpacityvEdit1 = Instance.new("TextButton", ChamsOpacityTextBox)
local ChamsOpacityvEdit2 = Instance.new("TextButton", ChamsOpacityTextBox)
local RefreshEspButton = Instance.new("TextButton", VisualsTabOutline2)

local AimbotToggle = Instance.new("TextButton", LegitTabOutline1) -- legit options
local AimbotToggleTitle = Instance.new("TextLabel", AimbotToggle)
local AimbotTeamCheckToggle = Instance.new("TextButton", LegitTabOutline1)
local AimbotTeamCheckToggleTitle = Instance.new("TextLabel", AimbotTeamCheckToggle)
local AimbotKeyButton = Instance.new("TextButton", LegitTabOutline1)
local AimbotSmoothingTextBox = Instance.new("TextLabel", LegitTabOutline1)
local AimbotSmoothingTextBoxTitle = Instance.new("TextLabel", AimbotSmoothingTextBox)
local AimbotSmoothingvEdit1 = Instance.new("TextButton", AimbotSmoothingTextBox)
local AimbotSmoothingvEdit2 = Instance.new("TextButton", AimbotSmoothingTextBox)
local AimbotCharModel = Instance.new("ImageLabel", LegitTabOutline3)
local AimbotHeadBone = Instance.new("ImageButton", AimbotCharModel)
local AimbotRootBone = Instance.new("ImageButton", AimbotCharModel)
local AimbotLeftArmBone = Instance.new("ImageButton", AimbotCharModel)
local AimbotRightArmBone = Instance.new("ImageButton", AimbotCharModel)
local AimbotLeftLegBone = Instance.new("ImageButton", AimbotCharModel)
local AimbotRightLegBone = Instance.new("ImageButton", AimbotCharModel)

local AntiAimToggle = Instance.new("TextButton", RageTabOutline1) -- rage options
local AntiAimToggleTitle = Instance.new("TextLabel", AntiAimToggle)
local AntiAimFlipToggle = Instance.new("TextButton", RageTabOutline1)
local AntiAimFlipToggleTitle = Instance.new("TextLabel", AntiAimFlipToggle)
local AntiAimFlipDistanceTextBox = Instance.new("TextLabel", RageTabOutline1)
local AntiAimFlipDistanceTextBoxTitle = Instance.new("TextLabel", AntiAimFlipDistanceTextBox)
local AntiAimFlipDistancevEdit1 = Instance.new("TextButton", AntiAimFlipDistanceTextBox)
local AntiAimFlipDistancevEdit2 = Instance.new("TextButton", AntiAimFlipDistanceTextBox)
local AntiAimFlipSpeedTextBox = Instance.new("TextLabel", RageTabOutline1)
local AntiAimFlipSpeedTextBoxTitle = Instance.new("TextLabel", AntiAimFlipSpeedTextBox)
local AntiAimFlipSpeedvEdit1 = Instance.new("TextButton", AntiAimFlipSpeedTextBox)
local AntiAimFlipSpeedvEdit2 = Instance.new("TextButton", AntiAimFlipSpeedTextBox)
local AntiAimSpinSpeedTextBox = Instance.new("TextLabel", RageTabOutline1)
local AntiAimSpinSpeedTextBoxTitle = Instance.new("TextLabel", AntiAimSpinSpeedTextBox)
local AntiAimSpinSpeedvEdit1 = Instance.new("TextButton", AntiAimSpinSpeedTextBox)
local AntiAimSpinSpeedvEdit2 = Instance.new("TextButton", AntiAimSpinSpeedTextBox)
local FakeLagToggle = Instance.new("TextButton", RageTabOutline1)
local FakeLagToggleTitle = Instance.new("TextLabel", FakeLagToggle)
local FakeLagDistanceTextBox = Instance.new("TextLabel", RageTabOutline1)
local FakeLagDistanceTextBoxTitle = Instance.new("TextLabel", FakeLagDistanceTextBox)
local FakeLagDistancevEdit1 = Instance.new("TextButton", FakeLagDistanceTextBox)
local FakeLagDistancevEdit2 = Instance.new("TextButton", FakeLagDistanceTextBox)
local FakeLagSpeedTextBox = Instance.new("TextLabel", RageTabOutline1)
local FakeLagSpeedTextBoxTitle = Instance.new("TextLabel", FakeLagSpeedTextBox)
local FakeLagSpeedvEdit1 = Instance.new("TextButton", FakeLagSpeedTextBox)
local FakeLagSpeedvEdit2 = Instance.new("TextButton", FakeLagSpeedTextBox)
local ThirdPersonToggle = Instance.new("TextButton", RageTabOutline2)
local ThirdPersonToggleTitle = Instance.new("TextLabel", ThirdPersonToggle)
local ThirdPersonDistanceTextBox = Instance.new("TextLabel", RageTabOutline2)
local ThirdPersonDistanceTextBoxTitle = Instance.new("TextLabel", ThirdPersonDistanceTextBox)
local ThirdPersonDistancevEdit1 = Instance.new("TextButton", ThirdPersonDistanceTextBox)
local ThirdPersonDistancevEdit2 = Instance.new("TextButton", ThirdPersonDistanceTextBox)

local WatermarkToggle = Instance.new("TextButton", MiscTabOutline1) -- misc options
local WatermarkToggleTitle = Instance.new("TextLabel", WatermarkToggle)
local ChatSpamToggle = Instance.new("TextButton", MiscTabOutline1)
local ChatSpamToggleTitle = Instance.new("TextLabel", ChatSpamToggle)
local FovChangerTextBox = Instance.new("TextLabel", MiscTabOutline1)
local FovChangerTextBoxTitle = Instance.new("TextLabel", FovChangerTextBox)
local FovChangervEdit1 = Instance.new("TextButton", FovChangerTextBox)
local FovChangervEdit2 = Instance.new("TextButton", FovChangerTextBox)
local CrosshairToggle = Instance.new("TextButton", MiscTabOutline1)
local CrosshairToggleTitle = Instance.new("TextLabel", CrosshairToggle)
local ConsoleToggle = Instance.new("TextButton", MiscTabOutline2)
local ConsoleToggleTitle = Instance.new("TextLabel", ConsoleToggle)

local NameEspColorTitle = Instance.new("TextLabel", ColorsTabOutline1) -- color options
local NameEspColorPreview = Instance.new("Frame", NameEspColorTitle)
local NameEspColorR = Instance.new("TextBox", NameEspColorTitle)
local NameEspColorG = Instance.new("TextBox", NameEspColorTitle)
local NameEspColorB = Instance.new("TextBox", NameEspColorTitle)
local BoxEspColorTitle = Instance.new("TextLabel", ColorsTabOutline1)
local BoxEspColorPreview = Instance.new("Frame", BoxEspColorTitle)
local BoxEspColorR = Instance.new("TextBox", BoxEspColorTitle)
local BoxEspColorG = Instance.new("TextBox", BoxEspColorTitle)
local BoxEspColorB = Instance.new("TextBox", BoxEspColorTitle)
local ChamsEspColorTitle = Instance.new("TextLabel", ColorsTabOutline1)
local ChamsEspColorPreview = Instance.new("Frame", ChamsEspColorTitle)
local ChamsEspColorR = Instance.new("TextBox", ChamsEspColorTitle)
local ChamsEspColorG = Instance.new("TextBox", ChamsEspColorTitle)
local ChamsEspColorB = Instance.new("TextBox", ChamsEspColorTitle)
local AimBoneEspColorTitle = Instance.new("TextLabel", ColorsTabOutline1)
local AimBoneEspColorPreview = Instance.new("Frame", AimBoneEspColorTitle)
local AimBoneEspColorR = Instance.new("TextBox", AimBoneEspColorTitle)
local AimBoneEspColorG = Instance.new("TextBox", AimBoneEspColorTitle)
local AimBoneEspColorB = Instance.new("TextBox", AimBoneEspColorTitle)
local MenuColorTitle = Instance.new("TextLabel", ColorsTabOutline2)
local MenuColorPreview = Instance.new("Frame", MenuColorTitle)
local MenuColorR = Instance.new("TextBox", MenuColorTitle)
local MenuColorG = Instance.new("TextBox", MenuColorTitle)
local MenuColorB = Instance.new("TextBox", MenuColorTitle)
local MenuLightModeToggle = Instance.new("TextButton", ColorsTabOutline2)
local MenuLightModeToggleTitle = Instance.new("TextLabel", MenuLightModeToggle)
local CrosshairColorTitle = Instance.new("TextLabel", ColorsTabOutline3)
local CrosshairColorPreview = Instance.new("Frame", CrosshairColorTitle)
local CrosshairColorR = Instance.new("TextBox", CrosshairColorTitle)
local CrosshairColorG = Instance.new("TextBox", CrosshairColorTitle)
local CrosshairColorB = Instance.new("TextBox", CrosshairColorTitle)
local ConsoleColorTitle = Instance.new("TextLabel", ColorsTabOutline3)
local ConsoleColorPreview = Instance.new("Frame", ConsoleColorTitle)
local ConsoleColorR = Instance.new("TextBox", ConsoleColorTitle)
local ConsoleColorG = Instance.new("TextBox", ConsoleColorTitle)
local ConsoleColorB = Instance.new("TextBox", ConsoleColorTitle)

local ConsoleBase = Instance.new("Frame", MenuGui) -- console
local ConsoleBaseUICorner = Instance.new("UICorner", ConsoleBase)
local ConsoleTitle = Instance.new("TextLabel", ConsoleBase)
local ConsoleLine = Instance.new("Frame", ConsoleTitle)
local ConsoleSpace = Instance.new("ScrollingFrame", ConsoleBase)
local CmdTextBox = Instance.new("TextBox", ConsoleBase)
local ConsoleCommandsList = Instance.new("TextLabel", MenuGui)
local ConsoleCommandsListClose = Instance.new("TextButton", ConsoleCommandsList)

---<Functions>---

local function GenString() -- for menu item names
	local Chars = {"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","1","2","3","4","5","6","7","8","9","0"} -- all numbers and letters + caps versions

	local Char1 = Chars[math.random(1, #Chars)] -- first character, get a random character from the chars table
	local Char2 = Chars[math.random(1, #Chars)] -- second char and so on
	local Char3 = Chars[math.random(1, #Chars)]
	local Char4 = Chars[math.random(1, #Chars)]
	local Char5 = Chars[math.random(1, #Chars)]

	local String = ""..Char1..Char2..Char3..Char4..Char5.."" -- string or item name that strings together all of our char variables
	return String -- return it so we can set a different name each time we execute the function
end

local function ChatSpam() -- for chat spammer
	local ChatTable = {
		"Ninelives owns me and all!",
		"God I wish I had Ninelives.",
		"Ninelives, 10 steps ahead of the game.",
		"I'm not using Ninelives! You're just bad.",
		"I'm not cheating but if I was I would be using Ninelives."
	}

	if game.PlaceId == 301549746 or game.PlaceId == 1480424328 or game.PlaceId == 1869597719 then
		game:GetService("ReplicatedStorage").Events.PlayerChatted:FireServer(ChatTable[math.random(1,#ChatTable)], false, "Innocent", false, true)
		wait(3)
	elseif game.PlaceId == 286090429 then
		game:GetService("ReplicatedStorage").Events.PlayerChatted:FireServer(ChatTable[math.random(1,#ChatTable)], false, "Innocent", false, true)
		wait(3)
	else
		game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(ChatTable[math.random(1, #ChatTable)], "All")
		wait(3)
	end
end

local function CreateGui(Variable) -- create menu uis
	Variable.Name = GenString()
	Variable.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Variable.ResetOnSpawn = false
end

local function CreateTabButton(Variable, intPosY, varColor, stringText) -- create tab buttons
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.5, 0, intPosY, 0)
	Variable.Size = UDim2.new(0.8, 0, 0.1, 0)
	Variable.BackgroundColor3 = lBlack
	Variable.TextColor3 = varColor
	Variable.Font = Enum.Font.ArialBold
	Variable.TextSize = 25
	Variable.Text = stringText
	Variable.Modal = true

	local UICorner = Instance.new("UICorner", Variable)
	UICorner.Name = GenString()
end

local function CreateTab(Variable, boolVisible) -- create tabs
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.635, 0, 0.5225)
	Variable.Size = UDim2.new(0.7, 0, 0.9, 0)
	Variable.BackgroundTransparency = 1
	Variable.Visible = boolVisible
end

local function CreateOutline(Variable, intPosX, intPosY, intLength) -- create tab outlines
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(intPosX, 0, intPosY, 0)
	Variable.Size = UDim2.new(0.45, 0, intLength, 0)
	Variable.BackgroundColor3 = lBlack
	Variable.BorderColor3 = Colors.AccentColor
	Variable.BorderSizePixel = 1
	Variable.BorderMode = Enum.BorderMode.Inset
end

local function CreateOutlineTitle(Variable, stringText, intLength) -- create title for outline
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.5, 0, 0, 0)
	Variable.Size = UDim2.new(0, intLength, 0, 20)
	Variable.BackgroundTransparency = 0
	Variable.BorderSizePixel = 0
	Variable.BackgroundColor3 = lBlack
	Variable.TextSize = 10
	Variable.Font = Enum.Font.Arial
	Variable.TextColor3 = White
	Variable.Text = stringText
end

local function CreateCheckBox(Variable, intPosY, varColor) -- create option check box
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.12, 0, intPosY, 0)
	Variable.Size = UDim2.new(0, 20, 0, 20)
	Variable.BackgroundColor3 = varColor
	Variable.BorderSizePixel = 1
	Variable.BorderColor3 = Colors.AccentColor
	Variable.Text = ""

	local UICorner = Instance.new("UICorner", Variable)
	UICorner.Name = GenString()
	UICorner.CornerRadius = UDim.new(1, 1)
end

local function CreateCheckBoxTitle(Variable, stringText) -- create check box title
	Variable.Name = GenString()
	Variable.AnchorPoint = Vector2.new(0, 0.5)
	Variable.Position = UDim2.new(1.5, 0, 0.5, 0)
	Variable.Size = UDim2.new(0, 150, 1, 0)
	Variable.BackgroundTransparency = 1
	Variable.TextColor3 = White
	Variable.TextSize = 15
	Variable.TextXAlignment = Enum.TextXAlignment.Left
	Variable.Font = Enum.Font.Arial
	Variable.Text = stringText
end

local function CreateButton(Variable, intPosY, stringText) -- create option button
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.5, 0, intPosY, 0)
	Variable.Size = UDim2.new(0, 100, 0, 30)
	Variable.BackgroundColor3 = dBlack
	Variable.TextColor3 = White
	Variable.Text = stringText

	local UICorner = Instance.new("UICorner", Variable)
	UICorner.Name = GenString()
end

local function CreateTextLabel(Variable, intPosY, stringText) -- create label for +-
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.15, 0, intPosY, 0)
	Variable.Size = UDim2.new(0, 20, 0, 20)
	Variable.BackgroundColor3 = lBlack
	Variable.BorderSizePixel = 0
	Variable.TextColor3 = White
	Variable.Text = stringText
end

local function CreateTextLabelTitle(Variable, stringText) -- create title for label
	Variable.Name = GenString()
	Variable.AnchorPoint = Vector2.new(0, 0.5)
	Variable.Position = UDim2.new(2, 0, 0.5, 0)
	Variable.Size = UDim2.new(0, 150, 1, 0)
	Variable.BackgroundTransparency = 1
	Variable.TextColor3 = White
	Variable.TextSize = 15
	Variable.TextXAlignment = Enum.TextXAlignment.Left
	Variable.Font = Enum.Font.Arial
	Variable.Text = stringText
end

local function CreatevEdit(Variable, Variable2) -- create +-
	Variable.Name = GenString()
	Variable.AnchorPoint = Vector2.new(0, 0.5)
	Variable.Position = UDim2.new(1, 0, 0.5, 0)
	Variable.Size = UDimFull
	Variable.BorderSizePixel = 0
	Variable.BackgroundColor3 = lBlack
	Variable.TextColor3 = White
	Variable.Text = "+"

	Variable2.Name = GenString()
	Variable2.AnchorPoint = Vector2.new(0, 0.5)
	Variable2.Position = UDim2.new(-1, 0, 0.5, 0)
	Variable2.Size = UDimFull
	Variable2.BorderSizePixel = 0
	Variable2.BackgroundColor3 = lBlack
	Variable2.TextColor3 = White
	Variable2.Text = "-"
end

local function CreateColorTitle(Variable, intPosY, stringText) -- create title for color picker
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.5, 0, intPosY, 0)
	Variable.Size = UDim2.new(0, 200, 0, 20)
	Variable.BackgroundTransparency = 1
	Variable.TextColor3 = White
	Variable.TextSize = 15
	Variable.TextXAlignment = Enum.TextXAlignment.Left
	Variable.Font = Enum.Font.Arial
	Variable.Text = stringText
end

local function CreateColorPreview(Variable, cVar) -- create color preview box
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(0.85, 0, 0.5, 0)
	Variable.Size = UDim2.new(0, 20, 0, 20)
	Variable.BorderSizePixel = 0
	Variable.BackgroundColor3 = cVar
end

local function CreateRGB(Variable1, Variable2, Variable3, Text1, Text2, Text3) -- create rgb value boxes
	Variable1.Name = GenString()
	Variable1.AnchorPoint = VectorCenter
	Variable1.Position = UDim2.new(0.25, 0, 2, 0)
	Variable1.Size = UDim2.new(0, 35, 0, 20)
	Variable1.BackgroundColor3 = dBlack
	Variable1.BorderSizePixel = 0
	Variable1.Text = Text1
	Variable1.TextColor3 = Color3.fromRGB(255, 255, 255)

	Variable2.Name = GenString()
	Variable2.AnchorPoint = VectorCenter
	Variable2.Position = UDim2.new(0.5, 0, 2, 0)
	Variable2.Size = UDim2.new(0, 35, 0, 20)
	Variable2.BackgroundColor3 = dBlack
	Variable2.BorderSizePixel = 0
	Variable2.Text = Text2
	Variable2.TextColor3 = Color3.fromRGB(255, 255, 255)

	Variable3.Name = GenString()
	Variable3.AnchorPoint = VectorCenter
	Variable3.Position = UDim2.new(0.75, 0, 2, 0)
	Variable3.Size = UDim2.new(0, 35, 0, 20)
	Variable3.BackgroundColor3 = dBlack
	Variable3.BorderSizePixel = 0
	Variable3.Text = Text3
	Variable3.TextColor3 = Color3.fromRGB(255, 255, 255)
end

local function CreateBone(Variable, intPosX, intPosY, varColor) -- create bone ui
	Variable.Name = GenString()
	Variable.AnchorPoint = VectorCenter
	Variable.Position = UDim2.new(intPosX, 0, intPosY, 0)
	Variable.Size = UDim2.new(0, 10, 0, 10)
	Variable.BackgroundTransparency = 1
	Variable.Image = "http://www.roblox.com/asset/?id=8153792195"
	Variable.ImageColor3 = varColor
end

function CreateLine(stringText, vColor1, vColor2, vColor3, intPosY, vParent) -- create new line for console
	NewLine = Instance.new("TextLabel", vParent)

	NewLine.Name = GenString()
	NewLine.AnchorPoint = VectorCenter
	NewLine.Position = UDim2.new(0.5, 0, intPosY, 0)
	NewLine.Size = UDim2.new(0.95, 0, 0.05, 0)
	NewLine.BackgroundTransparency = 1
	NewLine.TextWrapped = true
	NewLine.TextXAlignment = Enum.TextXAlignment.Left
	NewLine.TextColor3 = Color3.new(vColor1, vColor2, vColor3)
	NewLine.TextSize = 10
	NewLine.Text = stringText

	return NewLine
end

function UpdateIndex() -- add to position index and name index for console lines
	NameIndex = NameIndex + 1
	PosIndex = PosIndex + 0.02
end

local function UpdateUiElements() -- update accent colors of ui elements
	TitleLine.BackgroundColor3 = Colors.AccentColor -- menu and watermark
	WatermarkBottomLine.BackgroundColor3 = Colors.AccentColor

	VisualsTabOutline1.BorderColor3 = Colors.AccentColor -- tab outlines
	VisualsTabOutline2.BorderColor3 = Colors.AccentColor
	LegitTabOutline1.BorderColor3 = Colors.AccentColor
	LegitTabOutline2.BorderColor3 = Colors.AccentColor
	LegitTabOutline3.BorderColor3 = Colors.AccentColor
	RageTabOutline1.BorderColor3 = Colors.AccentColor
	RageTabOutline2.BorderColor3 = Colors.AccentColor
	MiscTabOutline1.BorderColor3 = Colors.AccentColor
	MiscTabOutline2.BorderColor3 = Colors.AccentColor
	ColorsTabOutline1.BorderColor3 = Colors.AccentColor
	ColorsTabOutline2.BorderColor3 = Colors.AccentColor
	ColorsTabOutline3.BorderColor3 = Colors.AccentColor

	Settings.ActiveTab.TextColor3 = Colors.AccentColor -- tab button (only this one because it has to be active to change accent color)

	if Settings.NameEsp then -- visual options
		NameEspToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.BoxEsp then
		BoxEspToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.ChamsEsp then
		ChamsEspToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.HealthEsp then
		HealthEspToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.AimBoneEsp then
		AimBoneEspToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.EspTeamCheck then
		EspTeamCheckToggle.BackgroundColor3 = Colors.AccentColor
	end

	if Settings.Aimbot then -- legit options
		AimbotToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.AimbotTeamCheck then
		AimbotTeamCheckToggle.BackgroundColor3 = Colors.AccentColor
	end

	if Settings.AntiAim then -- rage options
		AntiAimToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.AntiAimFlip then
		AntiAimFlipToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.FakeLag then
		FakeLagToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.ThirdPerson then
		ThirdPersonToggle.BackgroundColor3 = Colors.AccentColor
	end

	if WatermarkBase.Visible then -- misc options
		WatermarkToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Settings.ChatSpam then
		ChatSpamToggle.BackgroundColor3 = Colors.AccentColor
	end
	if Crosshair.Visible then
		CrosshairToggle.BackgroundColor3 = Colors.AccentColor
	end
	if ConsoleBase.Visible then
		ConsoleToggle.BackgroundColor3 = Colors.AccentColor
	end

	if Settings.LightMode then -- colors options
		MenuLightModeToggle.BackgroundColor3 = Colors.AccentColor
	end
end

local function ToggleLightMode() -- toggle light mode and change color vars
	Settings.LightMode = not Settings.LightMode -- toggle light mode

	if Settings.LightMode then -- if lightmode then change main colors
		CurrentTextColor = Black
		CurrentPrimaryColor = dWhite
		CurrentSecondaryColor = lmGrey
		CurrentTertiaryColor = lBlack

		MenuLightModeToggle.BackgroundColor3 = Colors.AccentColor -- change light mode button color
	else
		CurrentTextColor = White -- change back to normal
		CurrentPrimaryColor = lBlack
		CurrentSecondaryColor = dBlack
		CurrentTertiaryColor = lGrey

		MenuLightModeToggle.BackgroundColor3 = dBlack -- change back
	end
	UpdateText() -- update ui items
	UpdateColors()
end

function UpdateText() -- update text color for light mode
	MenuTitle.TextColor3 = CurrentTextColor -- menu
	WatermarkBase.TextColor3 = CurrentTextColor

	NameEspToggleTitle.TextColor3 = CurrentTextColor -- visuals options
	BoxEspToggleTitle.TextColor3 = CurrentTextColor
	ChamsEspToggleTitle.TextColor3 = CurrentTextColor
	HealthEspToggleTitle.TextColor3 = CurrentTextColor
	AimBoneEspToggleTitle.TextColor3 = CurrentTextColor
	EspTeamCheckToggleTitle.TextColor3 = CurrentTextColor
	ChamsOpacityTextBoxTitle.TextColor3 = CurrentTextColor
	ChamsOpacityTextBox.TextColor3 = CurrentTextColor
	ChamsOpacityvEdit1.TextColor3 = CurrentTextColor
	ChamsOpacityvEdit2.TextColor3 = CurrentTextColor
	RefreshEspButton.TextColor3 = CurrentTextColor

	AimbotToggleTitle.TextColor3 = CurrentTextColor -- legit options
	AimbotTeamCheckToggleTitle.TextColor3 = CurrentTextColor
	AimbotKeyButton.TextColor3 = CurrentTextColor
	AimbotSmoothingTextBox.TextColor3 = CurrentTextColor
	AimbotSmoothingTextBoxTitle.TextColor3 = CurrentTextColor
	AimbotSmoothingvEdit1.TextColor3 = CurrentTextColor
	AimbotSmoothingvEdit2.TextColor3 = CurrentTextColor

	AntiAimToggleTitle.TextColor3 = CurrentTextColor -- rage options
	AntiAimSpinSpeedTextBox.TextColor3 = CurrentTextColor
	AntiAimSpinSpeedTextBoxTitle.TextColor3 = CurrentTextColor
	AntiAimSpinSpeedvEdit1.TextColor3 = CurrentTextColor
	AntiAimSpinSpeedvEdit2.TextColor3 = CurrentTextColor
	AntiAimFlipToggleTitle.TextColor3 = CurrentTextColor
	AntiAimFlipDistanceTextBox.TextColor3 = CurrentTextColor
	AntiAimFlipDistanceTextBoxTitle.TextColor3 = CurrentTextColor
	AntiAimFlipDistancevEdit1.TextColor3 = CurrentTextColor
	AntiAimFlipDistancevEdit2.TextColor3 = CurrentTextColor
	AntiAimFlipSpeedTextBox.TextColor3 = CurrentTextColor
	AntiAimFlipSpeedTextBoxTitle.TextColor3 = CurrentTextColor
	AntiAimFlipSpeedvEdit1.TextColor3 = CurrentTextColor
	AntiAimFlipSpeedvEdit2.TextColor3 = CurrentTextColor
	FakeLagToggleTitle.TextColor3 = CurrentTextColor
	FakeLagDistanceTextBox.TextColor3 = CurrentTextColor
	FakeLagDistanceTextBoxTitle.TextColor3 = CurrentTextColor
	FakeLagDistancevEdit1.TextColor3 = CurrentTextColor
	FakeLagDistancevEdit2.TextColor3 = CurrentTextColor
	FakeLagSpeedTextBox.TextColor3 = CurrentTextColor
	FakeLagSpeedTextBoxTitle.TextColor3 = CurrentTextColor
	FakeLagSpeedvEdit1.TextColor3 = CurrentTextColor
	FakeLagSpeedvEdit2.TextColor3 = CurrentTextColor
	ThirdPersonToggleTitle.TextColor3 = CurrentTextColor
	ThirdPersonDistanceTextBox.TextColor3 = CurrentTextColor
	ThirdPersonDistanceTextBoxTitle.TextColor3 = CurrentTextColor
	ThirdPersonDistancevEdit1.TextColor3 = CurrentTextColor
	ThirdPersonDistancevEdit2.TextColor3 = CurrentTextColor

	WatermarkToggleTitle.TextColor3 = CurrentTextColor -- misc options
	ChatSpamToggleTitle.TextColor3 = CurrentTextColor
	FovChangerTextBoxTitle.TextColor3 = CurrentTextColor
	FovChangerTextBox.TextColor3 = CurrentTextColor
	FovChangervEdit1.TextColor3 = CurrentTextColor
	FovChangervEdit2.TextColor3 = CurrentTextColor
	CrosshairToggleTitle.TextColor3 = CurrentTextColor
	ConsoleToggleTitle.TextColor3 = CurrentTextColor

	NameEspColorTitle.TextColor3 = CurrentTextColor -- color options
	BoxEspColorTitle.TextColor3 = CurrentTextColor
	ChamsEspColorTitle.TextColor3 = CurrentTextColor
	AimBoneEspColorTitle.TextColor3 = CurrentTextColor
	MenuColorTitle.TextColor3 = CurrentTextColor
	MenuLightModeToggleTitle.TextColor3 = CurrentTextColor
	CrosshairColorTitle.TextColor3 = CurrentTextColor
	ConsoleColorTitle.TextColor3 = CurrentTextColor
	NameEspColorR.TextColor3 = CurrentTextColor
	NameEspColorG.TextColor3 = CurrentTextColor
	NameEspColorB.TextColor3 = CurrentTextColor
	BoxEspColorR.TextColor3 = CurrentTextColor
	BoxEspColorG.TextColor3 = CurrentTextColor
	BoxEspColorB.TextColor3 = CurrentTextColor
	ChamsEspColorR.TextColor3 = CurrentTextColor
	ChamsEspColorG.TextColor3 = CurrentTextColor
	ChamsEspColorB.TextColor3 = CurrentTextColor
	AimBoneEspColorR.TextColor3 = CurrentTextColor
	AimBoneEspColorG.TextColor3 = CurrentTextColor
	AimBoneEspColorB.TextColor3 = CurrentTextColor
	MenuColorR.TextColor3 = CurrentTextColor
	MenuColorG.TextColor3 = CurrentTextColor
	MenuColorB.TextColor3 = CurrentTextColor
	CrosshairColorR.TextColor3 = CurrentTextColor
	CrosshairColorG.TextColor3 = CurrentTextColor
	CrosshairColorB.TextColor3 = CurrentTextColor
	ConsoleColorR.TextColor3 = CurrentTextColor
	ConsoleColorG.TextColor3 = CurrentTextColor
	ConsoleColorB.TextColor3 = CurrentTextColor
end

function UpdateColors() -- update background colors for light mode
	MenuBase.BackgroundColor3 = CurrentPrimaryColor -- menu and watermark
	MenuInfoBar.BackgroundColor3 = CurrentTertiaryColor
	WatermarkBase.BackgroundColor3 = CurrentPrimaryColor
	PlayerAvatar.BackgroundColor3 = CurrentSecondaryColor

	InfoBarVisualsButton.BackgroundColor3, InfoBarVisualsButton.TextColor3 = CurrentPrimaryColor, CurrentTextColor -- tab buttons
	InfoBarLegitButton.BackgroundColor3, InfoBarLegitButton.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	InfoBarRageButton.BackgroundColor3, InfoBarRageButton.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	InfoBarMiscButton.BackgroundColor3, InfoBarMiscButton.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	InfoBarColorsButton.BackgroundColor3 = CurrentPrimaryColor

	VisualsTabOutline1.BackgroundColor3 = CurrentPrimaryColor -- tab outlines
	VisualsTabOutline2.BackgroundColor3 = CurrentPrimaryColor
	LegitTabOutline1.BackgroundColor3 = CurrentPrimaryColor
	LegitTabOutline2.BackgroundColor3 = CurrentPrimaryColor
	LegitTabOutline3.BackgroundColor3 = CurrentPrimaryColor
	RageTabOutline1.BackgroundColor3 = CurrentPrimaryColor
	RageTabOutline2.BackgroundColor3 = CurrentPrimaryColor
	MiscTabOutline1.BackgroundColor3 = CurrentPrimaryColor
	MiscTabOutline2.BackgroundColor3 = CurrentPrimaryColor
	ColorsTabOutline1.BackgroundColor3 = CurrentPrimaryColor
	ColorsTabOutline2.BackgroundColor3 = CurrentPrimaryColor
	ColorsTabOutline3.BackgroundColor3 = CurrentPrimaryColor

	VisualsTabOutline1Title.BackgroundColor3, VisualsTabOutline1Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor -- outline titles
	VisualsTabOutline2Title.BackgroundColor3, VisualsTabOutline2Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor
	LegitTabOutline1Title.BackgroundColor3, LegitTabOutline1Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor
	LegitTabOutline2Title.BackgroundColor3, LegitTabOutline2Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor
	LegitTabOutline3Title.BackgroundColor3, LegitTabOutline3Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	RageTabOutline1Title.BackgroundColor3, RageTabOutline1Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor
	RageTabOutline2Title.BackgroundColor3, RageTabOutline2Title.TextColor3 =  CurrentPrimaryColor,  CurrentTextColor
	MiscTabOutline1Title.BackgroundColor3, MiscTabOutline1Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	MiscTabOutline2Title.BackgroundColor3, MiscTabOutline2Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	ColorsTabOutline1Title.BackgroundColor3, ColorsTabOutline1Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	ColorsTabOutline2Title.BackgroundColor3, ColorsTabOutline2Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor
	ColorsTabOutline3Title.BackgroundColor3, ColorsTabOutline3Title.TextColor3 = CurrentPrimaryColor, CurrentTextColor

	if not Settings.NameEsp then -- visual options
		NameEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.BoxEsp then
		BoxEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.ChamsEsp then
		ChamsEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.HealthEsp then
		HealthEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.AimBoneEsp then
		AimBoneEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.EspTeamCheck then
		EspTeamCheckToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	ChamsOpacityTextBox.BackgroundColor3 = CurrentPrimaryColor
	ChamsOpacityvEdit1.BackgroundColor3 = CurrentPrimaryColor
	ChamsOpacityvEdit2.BackgroundColor3 = CurrentPrimaryColor
	RefreshEspButton.BackgroundColor3 = CurrentSecondaryColor

	if not Settings.Aimbot then -- legit options
		AimbotToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.AimbotTeamCheck then
		AimbotTeamCheckToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	AimbotKeyButton.BackgroundColor3 = CurrentSecondaryColor
	AimbotSmoothingTextBox.BackgroundColor3 = CurrentPrimaryColor
	AimbotSmoothingvEdit1.BackgroundColor3 = CurrentPrimaryColor
	AimbotSmoothingvEdit2.BackgroundColor3 = CurrentPrimaryColor

	if not Settings.AntiAim then -- rage options
		AntiAimToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	AntiAimSpinSpeedTextBox.BackgroundColor3 = CurrentPrimaryColor
	AntiAimSpinSpeedvEdit1.BackgroundColor3 = CurrentPrimaryColor
	AntiAimSpinSpeedvEdit2.BackgroundColor3 = CurrentPrimaryColor
	if not Settings.AntiAimFlip then
		AntiAimFlipToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	AntiAimFlipDistanceTextBox.BackgroundColor3 = CurrentPrimaryColor
	AntiAimFlipDistancevEdit1.BackgroundColor3 = CurrentPrimaryColor
	AntiAimFlipDistancevEdit2.BackgroundColor3 = CurrentPrimaryColor
	AntiAimFlipSpeedTextBox.BackgroundColor3 = CurrentPrimaryColor
	AntiAimFlipSpeedvEdit1.BackgroundColor3 = CurrentPrimaryColor
	AntiAimFlipSpeedvEdit2.BackgroundColor3 = CurrentPrimaryColor
	if not Settings.FakeLag then
		FakeLagToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	FakeLagDistanceTextBox.BackgroundColor3 = CurrentPrimaryColor
	FakeLagDistancevEdit1.BackgroundColor3 = CurrentPrimaryColor
	FakeLagDistancevEdit2.BackgroundColor3 = CurrentPrimaryColor
	FakeLagSpeedTextBox.BackgroundColor3 = CurrentPrimaryColor
	FakeLagSpeedvEdit1.BackgroundColor3 = CurrentPrimaryColor
	FakeLagSpeedvEdit2.BackgroundColor3 = CurrentPrimaryColor
	if not Settings.ThirdPerson then
		ThirdPersonToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	ThirdPersonDistanceTextBox.BackgroundColor3 = CurrentPrimaryColor
	ThirdPersonDistancevEdit1.BackgroundColor3 = CurrentPrimaryColor
	ThirdPersonDistancevEdit2.BackgroundColor3 = CurrentPrimaryColor

	if not WatermarkBase.Visible then -- misc options
		WatermarkToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not Settings.ChatSpam then
		ChatSpamToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	FovChangerTextBox.BackgroundColor3 = CurrentPrimaryColor
	FovChangervEdit1.BackgroundColor3 = CurrentPrimaryColor
	FovChangervEdit2.BackgroundColor3 = CurrentPrimaryColor
	if not Crosshair.Visible then
		CrosshairToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	if not ConsoleBase.Visible then
		ConsoleToggle.BackgroundColor3 = CurrentSecondaryColor
	end

	NameEspColorR.BackgroundColor3 = CurrentSecondaryColor -- color options
	NameEspColorG.BackgroundColor3 = CurrentSecondaryColor
	NameEspColorB.BackgroundColor3 = CurrentSecondaryColor
	BoxEspColorR.BackgroundColor3 = CurrentSecondaryColor
	BoxEspColorG.BackgroundColor3 = CurrentSecondaryColor
	BoxEspColorB.BackgroundColor3 = CurrentSecondaryColor
	ChamsEspColorR.BackgroundColor3 = CurrentSecondaryColor
	ChamsEspColorG.BackgroundColor3 = CurrentSecondaryColor
	ChamsEspColorB.BackgroundColor3 = CurrentSecondaryColor
	AimBoneEspColorR.BackgroundColor3 = CurrentSecondaryColor
	AimBoneEspColorG.BackgroundColor3 = CurrentSecondaryColor
	AimBoneEspColorB.BackgroundColor3 = CurrentSecondaryColor
	MenuColorR.BackgroundColor3 = CurrentSecondaryColor
	MenuColorG.BackgroundColor3 = CurrentSecondaryColor
	MenuColorB.BackgroundColor3 = CurrentSecondaryColor
	CrosshairColorR.BackgroundColor3 = CurrentSecondaryColor
	CrosshairColorG.BackgroundColor3 = CurrentSecondaryColor
	CrosshairColorB.BackgroundColor3 = CurrentSecondaryColor
	ConsoleColorR.BackgroundColor3 = CurrentSecondaryColor
	ConsoleColorG.BackgroundColor3 = CurrentSecondaryColor
	ConsoleColorB.BackgroundColor3 = CurrentSecondaryColor
end

function Format(Int)
	return string.format("%02i", Int)
end

---<Properties>---

Contents.Name = GenString() -- folder props

CreateGui(MenuGui) -- create menu, watermark and crosshair
CreateGui(WatermarkGui)
CreateGui(CrosshairGui)

MenuGui.IgnoreGuiInset = true
CrosshairGui.IgnoreGuiInset = true

MenuBase.Name = GenString() -- menu props
MenuBase.AnchorPoint = VectorCenter
MenuBase.Position = UDimCenter
MenuBase.Size = UDim2.new(0, 700, 0, 545)
MenuBase.BorderSizePixel = 0
MenuBase.BackgroundColor3 = lBlack
MenuBase.Active = true
MenuBase.Draggable = true

MenuTitle.Name = GenString()
MenuTitle.AnchorPoint = Vector2.new(0.5, 0)
MenuTitle.Position = UDim2.new(0.5, 0, 0.01, 0)
MenuTitle.Size = UDim2.new(0.98, 0, 0.02, 0)
MenuTitle.BackgroundTransparency = 1
MenuTitle.TextColor3 = White
MenuTitle.TextXAlignment = Enum.TextXAlignment.Left
MenuTitle.Font = Enum.Font.ArialBold
MenuTitle.TextScaled = true
MenuTitle.Text = "Ninelives Beta "..Version..""

TitleLine.Name = GenString()
TitleLine.AnchorPoint = VectorCenter
TitleLine.Position = UDim2.new(0.5, 0, 1.5, 0)
TitleLine.Size = UDim2.new(0, 700, 0.5, 0)
TitleLine.BorderSizePixel = 0
TitleLine.BackgroundColor3 = Colors.AccentColor

MenuInfoBar.Name = GenString()
MenuInfoBar.AnchorPoint = VectorCenter
MenuInfoBar.Position = UDim2.new(0.14, 0, 0.5225, 0)
MenuInfoBar.Size = UDim2.new(0.25, 0, 0.9, 0)
MenuInfoBar.BorderSizePixel = 0
MenuInfoBar.BackgroundTransparency = 0.9
MenuInfoBar.BackgroundColor3 = lGrey

WatermarkBase.Name = GenString() -- watermark props
WatermarkBase.AnchorPoint = VectorCenter
WatermarkBase.Position = UDim2.new(0.9, 0, 0.02, 0)
WatermarkBase.Size = UDim2.new(0, 350, 0, 30)
WatermarkBase.BackgroundColor3 = lBlack
WatermarkBase.Font = Enum.Font.ArialBold
WatermarkBase.TextSize = 11
WatermarkBase.TextColor3 = White
WatermarkBase.Text = "Ninelives "..Version.." | "..LocalPlayer.Name.." | "..Format(Hours)..":"..Format(Minutes)..":"..Format(Seconds)..""

WatermarkUICorner.Name = GenString()

WatermarkBottomLine.Name = GenString()
WatermarkBottomLine.AnchorPoint = VectorCenter
WatermarkBottomLine.Position = UDim2.new(0.5, 0, 0.91, 0)
WatermarkBottomLine.Size = UDim2.new(1, 0, 0, 5)
WatermarkBottomLine.BorderSizePixel = 0
WatermarkBottomLine.BackgroundColor3 = Colors.AccentColor

Crosshair.Name = GenString() -- crosshair props
Crosshair.AnchorPoint = VectorCenter
Crosshair.Size = UDim2.new(0, 75, 0, 75)
Crosshair.Image = "http://www.roblox.com/asset/?id=316279304"
Crosshair.ImageColor3 = Colors.CrosshairColor
Crosshair.BackgroundTransparency = 1
Crosshair.Visible = false

CreateLine("- cmds for commands", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- create starting line for console

ConsoleBase.Name = GenString() -- console props
ConsoleBase.AnchorPoint = VectorCenter
ConsoleBase.Position = UDim2.new(0.8, 0, 0.5, 0)
ConsoleBase.Size = UDim2.new(0, 300, 0, 250)
ConsoleBase.BackgroundTransparency = 0.5
ConsoleBase.BackgroundColor3 = Colors.ConsoleColor
ConsoleBase.Visible = false
ConsoleBase.Active = true
ConsoleBase.Draggable = true

ConsoleBaseUICorner.Name = GenString()

ConsoleTitle.Name = GenString()
ConsoleTitle.AnchorPoint = VectorCenter
ConsoleTitle.Position = UDim2.new(0.5, 0, 0.05, 0)
ConsoleTitle.Size = UDim2.new(1, 0, 0.05, 0)
ConsoleTitle.BackgroundTransparency = 1
ConsoleTitle.TextColor3 = White
ConsoleTitle.TextSize = 6
ConsoleTitle.Text = "Console"

ConsoleLine.Name = GenString()
ConsoleLine.AnchorPoint = VectorCenter
ConsoleLine.Position = UDim2.new(0.5, 0, 1.5, 0)
ConsoleLine.Size = UDim2.new(0, 300, 0, 1)
ConsoleLine.BorderSizePixel = 0
ConsoleLine.BackgroundColor3 = White

ConsoleSpace.Name = GenString()
ConsoleSpace.AnchorPoint = VectorCenter
ConsoleSpace.Position = UDimCenter
ConsoleSpace.Size = UDim2.new(1, 0, 0.8, 0)
ConsoleSpace.BackgroundTransparency = 1
ConsoleSpace.BorderSizePixel = 0
ConsoleSpace.CanvasSize = UDim2.new(0, 0, 4, 0)

CmdTextBox.Name = GenString()
CmdTextBox.AnchorPoint = VectorCenter
CmdTextBox.Position = UDim2.new(0.5, 0, 0.95, 0)
CmdTextBox.Size = UDim2.new(0.9, 0, 0.05, 0)
CmdTextBox.BackgroundTransparency = 1
CmdTextBox.TextColor3 = White
CmdTextBox.TextSize = 10
CmdTextBox.TextXAlignment = Enum.TextXAlignment.Left
CmdTextBox.TextWrapped = true
CmdTextBox.Text = ""
CmdTextBox.PlaceholderText = "Enter cmd here..."
CmdTextBox.FocusLost:Connect(function()
	CreateLine("- "..CmdTextBox.Text.."", 1, 1, 1, PosIndex, ConsoleSpace); UpdateIndex() -- create line saying "Enter cmd here..."
	CmdTextBox.Text = ""

	if NewLine.Text == "- clear" then -- if the text entered reads clear then

		for _,v in pairs (ConsoleSpace:GetChildren()) do -- for all lines
			v:Destroy() -- delete
			PosIndex = 0.02 -- reset position index to 0.02
		end

	elseif NewLine.Text == "- cmds" then -- if it reads cmd then make the list visible

		ConsoleCommandsList.Visible = true

	elseif NewLine.Text == "- shadow" then

		Colors.AccentColor = Shadow -- if shadow then change accent color to shadow, defined under the colors
		UpdateUiElements() -- update ui

	elseif NewLine.Text == "- refresh names" then -- if refresh names then

		RefreshNameEsp()
		CreateLine("- Names refreshed", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- refresh names and make a new line confirming

	elseif NewLine.Text == "- refresh boxes" then -- same idea for all esp refresh functions

		RefreshBoxEsp()
		CreateLine("- Boxes refreshed", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex()

	elseif NewLine.Text == "- refresh chams" then

		RefreshChamsEsp()
		CreateLine("- Chams refreshed", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex()

	elseif NewLine.Text == "- refresh health" then

		RefreshHealthEsp()
		CreateLine("- Health refreshed", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex()

	elseif NewLine.Text == "- refresh aimbone" then

		RefreshAimBoneEsp()
		CreateLine("- Aim bone refreshed", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex()

	elseif NewLine.Text == "- crash" then -- if crash then crash the game lol

		while true do
		end

	elseif NewLine.Text == "- unload" then -- if unload then attempt to disable all features and get rid of menu

		Contents:Destroy()
		game.Workspace.CurrentCamera.FieldOfView = 70
		Settings.ChatSpam = false
		Settings.Aimbot = false
		Settings.NameEsp = false
		Settings.BoxEsp = false
		Settings.ChamsEsp = false
		Settings.HealthEsp = false
		Settings.ThirdPerson = false
		Settings.AntiAim = false
		Settings.FakeLag = false
		LocalPlayer.Character.Humanoid.Health = 0

	elseif NewLine.Text == "- rainbow" then -- if rainbow then

		Settings.Rainbow = not Settings.Rainbow -- activate rainbow
		rainbow() -- start function

		if Settings.Rainbow then
			CreateLine("- Rainbow enabled", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- if on then say enabled
		else
			CreateLine("- Rainbow disabled", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- if off then say disabled
		end

	elseif string.match(NewLine.Text, "- speedhack") then -- if speedhack is found in the string then

		LocalPlayer.Character.Humanoid.WalkSpeed = string.gsub(NewLine.Text, "%D", "") -- look for ONLY the numbers in the string and set walkspeed to that number
		CreateLine("- Speed is "..tostring(LocalPlayer.Character.Humanoid.WalkSpeed).."", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- print players walkspeed to our console

	elseif string.match(NewLine.Text, "- jumphack") then -- same idea as speedhack but for jump power

		LocalPlayer.Character.Humanoid.JumpPower = string.gsub(NewLine.Text, "%D", "")
		CreateLine("- Jump height is "..tostring(LocalPlayer.Character.Humanoid.JumpPower).."", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex()

	elseif NewLine.Text == "- unlock camera" then -- this is for fps games that lock you in first person

		if not Settings.ThirdPerson then -- if force third person is off then
			if Settings.CamDist == 0 then -- if camera is locked then
				Settings.CamDist = 40 -- unlock
				LocalPlayer.CameraMaxZoomDistance = Settings.CamDist -- max distance = 40
				LocalPlayer.CameraMinZoomDistance = 0 -- min dist is 0
				CreateLine("- Camera is unlocked", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- create line saying cam is unlocked
			else
				Settings.CamDist = 0 -- if unlocked then lock
				LocalPlayer.CameraMaxZoomDistance = Settings.CamDist -- 0
				LocalPlayer.CameraMinZoomDistance = 0 -- 0
				CreateLine("- Camera is locked", 0.5, 0.5, 0.5, PosIndex, ConsoleSpace); UpdateIndex() -- say cam is locked
			end
		end

	else

		CreateLine("- Unknown command", 1, 0, 0, PosIndex, ConsoleSpace); UpdateIndex() -- if the line text doesnt find any of these cmds then make a line in red saying "unknown command"

	end
end)

CreateLine("cmds | Shows commands list", 1, 1, 1, 0.05, ConsoleCommandsList) -- commands for list
CreateLine("clear | Clears console space", 1, 1, 1, 0.1, ConsoleCommandsList)
CreateLine("crash | Crashes local game", 1, 1, 1, 0.15, ConsoleCommandsList)
CreateLine("unload | Unloads cheat", 1, 1, 1, 0.2, ConsoleCommandsList)
CreateLine("shadow | Changes menu color to secret color", 1, 1, 1, 0.25, ConsoleCommandsList)
CreateLine("rainbow | Rainbow menu color", 1, 1, 1, 0.3, ConsoleCommandsList)
CreateLine("refresh names | Refreshes name esp", 1, 1, 1, 0.35, ConsoleCommandsList)
CreateLine("refresh boxes | Refreshes box esp", 1, 1, 1, 0.4, ConsoleCommandsList)
CreateLine("refresh chams | Refreshes chams esp", 1, 1, 1, 0.45, ConsoleCommandsList)
CreateLine("refresh health | Refreshes health esp", 1, 1, 1, 0.5, ConsoleCommandsList)
CreateLine("refresh aimbone | Refreshes aimbone esp", 1, 1, 1, 0.55, ConsoleCommandsList)
CreateLine("speedhack | Syntax: speedhack (number)", 1, 1, 1, 0.6, ConsoleCommandsList)
CreateLine("jumphack | Syntax: jumphack (number)", 1, 1, 1, 0.65, ConsoleCommandsList)
CreateLine("unlock camera | Toggles unlock camera zoom", 1, 1, 1, 0.7, ConsoleCommandsList)

ConsoleCommandsList.Name = GenString() -- commands list props
ConsoleCommandsList.AnchorPoint = VectorCenter
ConsoleCommandsList.Position = UDimCenter
ConsoleCommandsList.Size = UDim2.new(0, 300, 0, 600)
ConsoleCommandsList.Visible = false
ConsoleCommandsList.BackgroundTransparency = 0.5
ConsoleCommandsList.BackgroundColor3 = Colors.ConsoleColor
ConsoleCommandsList.TextYAlignment = Enum.TextYAlignment.Top
ConsoleCommandsList.TextColor3 = White
ConsoleCommandsList.Text = "- Commands -"
ConsoleCommandsList.Active = true
ConsoleCommandsList.Draggable = true

ConsoleCommandsListClose.Name = GenString() -- commands list close button
ConsoleCommandsListClose.AnchorPoint = VectorCenter
ConsoleCommandsListClose.Position = UDim2.new(0.94, 0, 0.03, 0)
ConsoleCommandsListClose.Size = UDim2.new(0, 25, 0, 25)
ConsoleCommandsListClose.BackgroundColor3 = Red
ConsoleCommandsListClose.BorderColor3 = White
ConsoleCommandsListClose.BorderSizePixel = 2
ConsoleCommandsListClose.TextColor3 = White
ConsoleCommandsListClose.Text = "X"
ConsoleCommandsListClose.MouseButton1Click:Connect(function()
	ConsoleCommandsList.Visible = false
end)

PlayerAvatar.Name = GenString() -- menu avatar props
PlayerAvatar.AnchorPoint = VectorCenter
PlayerAvatar.Position = UDim2.new(0.5, 0, 0.16, 0)
PlayerAvatar.Size = UDim2.new(0, 150, 0, 150)
PlayerAvatar.BackgroundColor3 = dBlack
PlayerAvatar.BorderSizePixel = 0
PlayerAvatar.Image = game.Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)

PlayerAvatarUICorner.CornerRadius = UDim.new(1, 1) -- just making the avatar ui round

CreateTabButton(InfoBarVisualsButton, 0.4, Colors.AccentColor, "Visuals") -- create tab buttons, first is set to the accent color because it is the default selected tab
CreateTabButton(InfoBarLegitButton, 0.525, White, "Legit")
CreateTabButton(InfoBarRageButton, 0.65, White, "Rage")
CreateTabButton(InfoBarMiscButton, 0.775, White, "Misc")
CreateTabButton(InfoBarColorsButton, 0.9, White, "Colors")

InfoBarVisualsButton.MouseButton1Click:Connect(function() -- tab button functions
	Settings.ActiveTab = InfoBarVisualsButton -- change active tab so that when colors update it knows which tab button to change

	InfoBarVisualsButton.TextColor3 = Colors.AccentColor -- active tab text color becomes accent color
	InfoBarLegitButton.TextColor3 = CurrentTextColor -- everytning else becomes current text color (white for regular black for lightmode)
	InfoBarRageButton.TextColor3 = CurrentTextColor
	InfoBarMiscButton.TextColor3 = CurrentTextColor
	InfoBarColorsButton.TextColor3 = CurrentTextColor

	MenuVisualsTab.Visible = true -- active tab is visible
	MenuLegitTab.Visible = false -- rest are hidden
	MenuRageTab.Visible = false
	MenuMiscTab.Visible = false
	MenuColorsTab.Visible = false
end)
InfoBarLegitButton.MouseButton1Click:Connect(function()
	Settings.ActiveTab = InfoBarLegitButton

	InfoBarVisualsButton.TextColor3 = CurrentTextColor
	InfoBarLegitButton.TextColor3 = Colors.AccentColor
	InfoBarRageButton.TextColor3 = CurrentTextColor
	InfoBarMiscButton.TextColor3 = CurrentTextColor
	InfoBarColorsButton.TextColor3 = CurrentTextColor

	MenuVisualsTab.Visible = false
	MenuLegitTab.Visible = true
	MenuRageTab.Visible = false
	MenuMiscTab.Visible = false
	MenuColorsTab.Visible = false
end)
InfoBarRageButton.MouseButton1Click:Connect(function()
	Settings.ActiveTab = InfoBarRageButton

	InfoBarVisualsButton.TextColor3 = CurrentTextColor
	InfoBarLegitButton.TextColor3 = CurrentTextColor
	InfoBarRageButton.TextColor3 = Colors.AccentColor
	InfoBarMiscButton.TextColor3 = CurrentTextColor
	InfoBarColorsButton.TextColor3 = CurrentTextColor

	MenuVisualsTab.Visible = false
	MenuLegitTab.Visible = false
	MenuRageTab.Visible = true
	MenuMiscTab.Visible = false
	MenuColorsTab.Visible = false
end)
InfoBarMiscButton.MouseButton1Click:Connect(function()
	Settings.ActiveTab = InfoBarMiscButton

	InfoBarVisualsButton.TextColor3 = CurrentTextColor
	InfoBarLegitButton.TextColor3 = CurrentTextColor
	InfoBarRageButton.TextColor3 = CurrentTextColor
	InfoBarMiscButton.TextColor3 = Colors.AccentColor
	InfoBarColorsButton.TextColor3 = CurrentTextColor

	MenuVisualsTab.Visible = false
	MenuLegitTab.Visible = false
	MenuRageTab.Visible = false
	MenuMiscTab.Visible = true
	MenuColorsTab.Visible = false
end)
InfoBarColorsButton.MouseButton1Click:Connect(function()
	Settings.ActiveTab = InfoBarColorsButton

	InfoBarVisualsButton.TextColor3 = CurrentTextColor
	InfoBarLegitButton.TextColor3 = CurrentTextColor
	InfoBarRageButton.TextColor3 = CurrentTextColor
	InfoBarMiscButton.TextColor3 = CurrentTextColor
	InfoBarColorsButton.TextColor3 = Colors.AccentColor

	MenuVisualsTab.Visible = false
	MenuLegitTab.Visible = false
	MenuRageTab.Visible = false
	MenuMiscTab.Visible = false
	MenuColorsTab.Visible = true
end)

CreateTab(MenuVisualsTab, true) -- create tabs
CreateTab(MenuLegitTab, false)
CreateTab(MenuRageTab, false)
CreateTab(MenuMiscTab, false)
CreateTab(MenuColorsTab, false)

CreateOutline(VisualsTabOutline1, Left, 0.5, 1) -- create tab outlines
CreateOutline(VisualsTabOutline2, Right, 0.5, 1)
CreateOutline(LegitTabOutline1, Left, 0.5, 1)
CreateOutline(LegitTabOutline2, Right, 0.225, 0.45)
CreateOutline(LegitTabOutline3, Right, 0.775, 0.45)
CreateOutline(RageTabOutline1, Left, 0.5, 1)
CreateOutline(RageTabOutline2, Right, 0.5, 1)
CreateOutline(MiscTabOutline1, Left, 0.5, 1)
CreateOutline(MiscTabOutline2, Right, 0.5, 1)
CreateOutline(ColorsTabOutline1, Left, 0.5, 1)
CreateOutline(ColorsTabOutline2, Right, 0.225, 0.45)
CreateOutline(ColorsTabOutline3, Right, 0.775, 0.45)

CreateOutlineTitle(VisualsTabOutline1Title, "Player", 40) -- create outline names
CreateOutlineTitle(VisualsTabOutline2Title, "Other", 40)
CreateOutlineTitle(LegitTabOutline1Title, "Aimbot", 45)
CreateOutlineTitle(LegitTabOutline2Title, "Triggerbot", 60)
CreateOutlineTitle(LegitTabOutline3Title, "AimBone", 50)
CreateOutlineTitle(RageTabOutline1Title, "Rage", 35)
CreateOutlineTitle(RageTabOutline2Title, "Other", 40)
CreateOutlineTitle(MiscTabOutline1Title, "General", 50)
CreateOutlineTitle(MiscTabOutline2Title, "Other", 40)
CreateOutlineTitle(ColorsTabOutline1Title, "Esp", 30)
CreateOutlineTitle(ColorsTabOutline2Title, "Menu", 35)
CreateOutlineTitle(ColorsTabOutline3Title, "Other", 40)

AimbotCharModel.Name = GenString() -- this is the base ui for aimbone selection
AimbotCharModel.AnchorPoint = VectorCenter
AimbotCharModel.Position = UDimCenter
AimbotCharModel.Size = UDim2.new(0, 175, 0, 175)
AimbotCharModel.BackgroundTransparency = 1
AimbotCharModel.Image = "http://www.roblox.com/asset/?id=8153734240"

---<Visuals Options>---

--<Name Esp Code>--
CreateCheckBox(NameEspToggle, 0.1, dBlack) -- create name esp toggle check box
CreateCheckBoxTitle(NameEspToggleTitle, "Name Esp") -- create title for name esp check box

NameEspToggle.MouseButton1Click:Connect(function() -- name esp check box function
	Settings.NameEsp = not Settings.NameEsp -- toggle name esp var

	if Settings.NameEsp then -- if name esp is on then change check box color to the accent color
		NameEspToggle.BackgroundColor3 = Colors.AccentColor
	else -- if name esp is off change it to dark black and remove any instance of esp from players
		NameEspToggle.BackgroundColor3 = CurrentSecondaryColor

		for _,v in pairs (Players:GetPlayers()) do -- find each player and refer to them as v
			if v ~= LocalPlayer and v.Character ~= nil then -- if the player isnt the player using the script and the players character can be found
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then -- if the players humanoidrootpart (where the esp is placed) can be found
					if v.Character.HumanoidRootPart:FindFirstChild("NameEsp") ~= nil then -- if is an instance of name esp then remove it
						v.Character.HumanoidRootPart.NameEsp:Destroy()
					end
				end
			end
		end
	end
end)

local NameEspGui = Instance.new("BillboardGui") -- creating ui and items to be set on player
local NameEsp = Instance.new("TextLabel", NameEspGui)

NameEspGui.Name = "NameEsp" -- props for name esp ui
NameEspGui.ResetOnSpawn = false
NameEspGui.AlwaysOnTop = true
NameEspGui.Size = UDimFull
NameEspGui.ExtentsOffset = Vector3.new(0, 2.5, 0)

NameEsp.BackgroundTransparency = 1 -- props for name esp items
NameEsp.Text = "Esp"
NameEsp.AnchorPoint = VectorCenter
NameEsp.Size = UDimFull
NameEsp.Position = UDim2.new(0.5, 0, 0, 0)
NameEsp.Font = "GothamSemibold"
NameEsp.TextSize = 11
NameEsp.TextStrokeTransparency = 0
NameEsp.TextStrokeColor3 = Black

game:GetService("RunService").RenderStepped:Connect(function() -- set ui on player
	for _,v in pairs (Players:GetPlayers()) do
		if v.Team ~= LocalPlayer.Team or not Settings.EspTeamCheck then -- if the player isnt on the team of the player using the script or if teamcheck is off
			if v ~= LocalPlayer and v.Character ~= nil and Settings.NameEsp == true then -- if not the player using the script and character can be found and name esp is enabled
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then -- if esp root part can be found
					if v.Character.HumanoidRootPart:FindFirstChild("NameEsp") == nil then -- if there isnt already an instance of esp then create new props and add to the players root part
						NameEsp.Text = ""..v.Name.."" -- set esp text to read players name
						NameEsp.TextColor3 = Colors.NameEspColor
						NameEspGui.Adornee = v.Character.HumanoidRootPart
						NameEspGui:Clone().Parent = v.Character.HumanoidRootPart
					end
				end
			end
		end
	end
end)

--<Box Esp Code>--
CreateCheckBox(BoxEspToggle, 0.2, dBlack) -- create check box for box esp
CreateCheckBoxTitle(BoxEspToggleTitle, "Box Esp") -- create title for box esp check box

BoxEspToggle.MouseButton1Click:Connect(function() -- box esp check box function
	Settings.BoxEsp = not Settings.BoxEsp -- toggle box esp var

	if Settings.BoxEsp then -- if on then change to accent
		BoxEspToggle.BackgroundColor3 = Colors.AccentColor
	else -- if not then change to dark black and remove esp
		BoxEspToggle.BackgroundColor3 = CurrentSecondaryColor

		for _,v in pairs (Players:GetPlayers()) do -- remove with similar code to name esp
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("BoxEsp") ~= nil then
						v.Character.HumanoidRootPart.BoxEsp:Destroy()
					end
				end
			end
		end
	end
end)

local BoxEspGui = Instance.new("BillboardGui") -- box esp ui
local BoxEsp = Instance.new("ImageLabel", BoxEspGui)

BoxEspGui.Name = "BoxEsp" -- box esp props
BoxEspGui.ResetOnSpawn = false
BoxEspGui.AlwaysOnTop = true
BoxEspGui.Size = UDim2.new(4, 0, 6, 0)

BoxEsp.Name = "Esp"
BoxEsp.BackgroundTransparency = 1
BoxEsp.Image = "http://www.roblox.com/asset/?id=8083895219"
BoxEsp.AnchorPoint = VectorCenter
BoxEsp.Size = UDimFull
BoxEsp.Position = UDimCenter

game:GetService("RunService").RenderStepped:Connect(function() -- create box esp function
	for _,v in pairs (Players:GetPlayers()) do -- add esp with similar function to name esp
		if v.Team ~= LocalPlayer.Team or not Settings.EspTeamCheck then
			if v ~= LocalPlayer and v.Character ~= nil and Settings.BoxEsp == true then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("BoxEsp") == nil then
						BoxEsp.ImageColor3 = Colors.BoxEspColor
						BoxEspGui.Adornee = v.Character.HumanoidRootPart
						BoxEspGui:Clone().Parent = v.Character.HumanoidRootPart
					end
				end
			end
		end
	end
end)

--<Chams Code>--
CreateCheckBox(ChamsEspToggle, 0.3, dBlack) -- create check box for chams
CreateCheckBoxTitle(ChamsEspToggleTitle, "Chams Esp") -- create title

ChamsEspToggle.MouseButton1Click:Connect(function() -- check box toggle function, similar to other esp
	Settings.ChamsEsp = not Settings.ChamsEsp

	if Settings.ChamsEsp then
		ChamsEspToggle.BackgroundColor3 = Colors.AccentColor
	else
		ChamsEspToggle.BackgroundColor3 = CurrentSecondaryColor

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character then
				for _,v in pairs (v.Character:GetChildren()) do -- this for v in pairs will get all of the characters "bones" or parts
					if v:IsA("MeshPart") or v.Name == "Head" or v.Name == "Torso" or v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then -- mesh parts will account for r15 parts and any part considered a mesh, the rest are default names for r6 parts, you would change those names if the startercharacter uses different names 
						for _,v in pairs(v:GetDescendants()) do -- for all of those parts named above if it finds a surface gui (chams) then remove it
							if v:IsA("SurfaceGui") then
								v:Destroy()
							end
						end
					end
				end
			end
		end
	end
end)

function CreateChams(varParent, varFace) -- custom function for making cham surfaces
	local ChamsGui = Instance.new("SurfaceGui", varParent)
	ChamsGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	ChamsGui.Face = Enum.NormalId[varFace]
	ChamsGui.LightInfluence = 0
	ChamsGui.ResetOnSpawn = false
	ChamsGui.Name = "ChamsEsp"
	ChamsGui.AlwaysOnTop = true -- reminds me to find a way for wall checks on esp, this will allow for custom colors based on visibility and only visible esp
	local ChamsEsp = Instance.new("Frame", ChamsGui)
	ChamsEsp.Name = "Esp"
	ChamsEsp.BackgroundColor3 = Colors.ChamsEspColor
	ChamsEsp.BackgroundTransparency = Settings.ChamsOpacityTranslation
	ChamsEsp.BorderSizePixel = 0
	ChamsEsp.Size = UDimFull
end

game:GetService("RunService").RenderStepped:Connect(function() -- add the chams function
	for _,v in pairs (Players:GetPlayers()) do
		if v.Team ~= LocalPlayer.Team or not Settings.EspTeamCheck then
			if v ~= LocalPlayer and v.Character ~= nil and Settings.ChamsEsp == true and v.Character:FindFirstChild("Head") then
				for _,v in pairs (v.Character:GetChildren()) do
					if v:IsA("MeshPart") or v.Name == "Head" or v.Name == "Torso" or v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then -- same for v as before grabbing all the characters parts or "bones"
						if not v:FindFirstChild("ChamsEsp") then -- if no cham found then add cham surface to ALL faces of the part
							CreateChams(v, "Back")
							CreateChams(v, "Front")
							CreateChams(v, "Left")
							CreateChams(v, "Right")
							CreateChams(v, "Right")
							CreateChams(v, "Top")
							CreateChams(v, "Bottom")
						end
					end
				end
			end     
		end
	end
end)

--<Health Esp Code>--
CreateCheckBox(HealthEspToggle, 0.4, dBlack) -- health esp check box and title
CreateCheckBoxTitle(HealthEspToggleTitle, "Health Esp")

HealthEspToggle.MouseButton1Click:Connect(function() -- check box function
	Settings.HealthEsp = not Settings.HealthEsp

	if Settings.HealthEsp then
		HealthEspToggle.BackgroundColor3 = Colors.AccentColor
	else
		HealthEspToggle.BackgroundColor3 = CurrentSecondaryColor
	end
	wait() -- dont remember why but this helps with bugs
	Update() -- will explain this function towards the end of visual options, it is only used for health esp
end)

local HealthEspGui = Instance.new("BillboardGui") -- health esp ui and items
local HealthEsp = Instance.new("TextLabel", HealthEspGui)

HealthEspGui.Name = "HealthEsp" -- props for ui and items
HealthEspGui.AlwaysOnTop = true
HealthEspGui.Size = UDimFull
HealthEspGui.ExtentsOffset = Vector3.new(0, -3, 0)

HealthEsp.Name = "Esp"
HealthEsp.BackgroundTransparency = 1
HealthEsp.AnchorPoint = VectorCenter
HealthEsp.Size = UDimFull
HealthEsp.Position = UDim2.new(0.5, 0, 1, 0)
HealthEsp.Text = ""
HealthEsp.TextColor3 = Color3.fromRGB(0, 255, 0)
HealthEsp.TextStrokeTransparency = 0

--<AimBone Esp Code>--
CreateCheckBox(AimBoneEspToggle, 0.5, dBlack) -- check box and title for aim bone esp
CreateCheckBoxTitle(AimBoneEspToggleTitle, "Aim Bone Esp")

AimBoneEspToggle.MouseButton1Click:Connect(function() -- check box function
	Settings.AimBoneEsp = not Settings.AimBoneEsp

	if Settings.AimBoneEsp then
		AimBoneEspToggle.BackgroundColor3 = Colors.AccentColor
	else
		AimBoneEspToggle.BackgroundColor3 = CurrentSecondaryColor


		for _,v in pairs (Players:GetPlayers()) do -- very similar to name and box esp, difference is it looks for the active aimbot bone and finds/adds or removes esp based on active bone
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
					if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
						v.Character[Settings.AimBone].AimBoneEsp:Destroy()
					end
				end
			end
		end
	end
end)

local AimBoneGui = Instance.new("BillboardGui") -- aim bone esp ui and items
local AimBoneEsp = Instance.new("ImageLabel", AimBoneGui)

AimBoneGui.Name = "AimBoneEsp" -- props for ui and items
AimBoneGui.AlwaysOnTop = true
AimBoneGui.Size = UDimFull

AimBoneEsp.Name = "Esp"
AimBoneEsp.BackgroundTransparency = 1
AimBoneEsp.AnchorPoint = VectorCenter
AimBoneEsp.Size = UDimCenter
AimBoneEsp.Position = UDimCenter
AimBoneEsp.Image = "http://www.roblox.com/asset/?id=8153792195"
AimBoneEsp.ImageColor3 = White

game:GetService("RunService").RenderStepped:Connect(function() -- function for aim bone esp
	for _,v in pairs (Players:GetPlayers()) do
		if v.Team ~= LocalPlayer.Team or not Settings.EspTeamCheck then
			if v ~= LocalPlayer and v.Character ~= nil and Settings.AimBoneEsp == true then
				if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
					if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") == nil then -- same as others just using the aim bone instead of the root part
						AimBoneEsp.ImageColor3 = Colors.AimBoneEspColor
						AimBoneGui.Adornee = v.Character[Settings.AimBone]
						AimBoneGui:Clone().Parent = v.Character[Settings.AimBone]
					end
				end
			end
		end
	end
end)

---<Visuals Options 2>---

--<Team Check>--
CreateCheckBox(EspTeamCheckToggle, 0.1, Colors.AccentColor) -- create team check toggle check box
CreateCheckBoxTitle(EspTeamCheckToggleTitle, "Team Check") -- team check check box title

EspTeamCheckToggle.MouseButton1Click:Connect(function() -- team check function
	Settings.EspTeamCheck = not Settings.EspTeamCheck

	if Settings.EspTeamCheck then
		EspTeamCheckToggle.BackgroundColor3 = Colors.AccentColor

		for _,v in pairs (Players:GetPlayers()) do -- what im doing with all of these is removing the esp if the player is on the team of the player using the script, this helps if teamcheck is changed to true while esp is active, otherwise a manual refresh or retoggle would be needed
			if v.Team == LocalPlayer.Team then
				if v ~= LocalPlayer and v.Character ~= nil then
					if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
						if v.Character.HumanoidRootPart:FindFirstChild("NameEsp") ~= nil then
							v.Character.HumanoidRootPart.NameEsp:Destroy()
						end
					end
				end
			end
		end

		for _,v in pairs (Players:GetPlayers()) do -- these are the same as the removal functions under the check box toggle functions
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("BoxEsp") ~= nil then
						v.Character.HumanoidRootPart.BoxEsp:Destroy()
					end
				end
			end
		end

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character then
				for _,v in pairs (v.Character:GetChildren()) do
					if v:IsA("MeshPart") or v.Name == "Head" or v.Name == "Torso" or v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
						for _,v in pairs(v:GetDescendants()) do
							if v:IsA("SurfaceGui") then
								v:Destroy()
							end
						end
					end
				end
			end
		end

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("HealthEsp") ~= nil then
						v.Character.HumanoidRootPart.HealthEsp:Destroy()
					end
				end
			end
		end

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
					if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
						v.Character[Settings.AimBone].AimBoneEsp:Destroy()
					end
				end
			end
		end
	else
		EspTeamCheckToggle.BackgroundColor3 = CurrentSecondaryColor -- no need to do anything if its enabled
	end
end)

--<Chams Opacity>--
CreateTextLabel(ChamsOpacityTextBox, 0.2, tostring(Settings.ChamsOpacity)) -- label showing the value of chams opacity
CreateTextLabelTitle(ChamsOpacityTextBoxTitle, "Chams Opacity") -- title for label
CreatevEdit(ChamsOpacityvEdit1, ChamsOpacityvEdit2) -- vedits or variable edits are going to be the + and - buttons

ChamsOpacityvEdit1.MouseButton1Click:Connect(function() -- function for the + button
	if Settings.ChamsOpacity < 5 then
		Settings.ChamsOpacity = Settings.ChamsOpacity + 1
	end
	ChamsOpacityTextBox.Text = tostring(Settings.ChamsOpacity)

	if Settings.ChamsOpacity == 5 then
		Settings.ChamsOpacityTranslation = 0
	elseif Settings.ChamsOpacity == 4 then
		Settings.ChamsOpacityTranslation = 0.2
	elseif Settings.ChamsOpacity == 3 then
		Settings.ChamsOpacityTranslation = 0.4
	elseif Settings.ChamsOpacity == 2 then
		Settings.ChamsOpacityTranslation = 0.6
	elseif Settings.ChamsOpacity == 1 then
		Settings.ChamsOpacityTranslation = 0.8
	end

	RefreshChamsEsp()
end)

ChamsOpacityvEdit2.MouseButton1Click:Connect(function() -- function for the - button
	if Settings.ChamsOpacity > 1 then
		Settings.ChamsOpacity = Settings.ChamsOpacity - 1
	end
	ChamsOpacityTextBox.Text = tostring(Settings.ChamsOpacity)

	if Settings.ChamsOpacity == 5 then
		Settings.ChamsOpacityTranslation = 0
	elseif Settings.ChamsOpacity == 4 then
		Settings.ChamsOpacityTranslation = 0.2
	elseif Settings.ChamsOpacity == 3 then
		Settings.ChamsOpacityTranslation = 0.4
	elseif Settings.ChamsOpacity == 2 then
		Settings.ChamsOpacityTranslation = 0.6
	elseif Settings.ChamsOpacity == 1 then
		Settings.ChamsOpacityTranslation = 0.8
	end

	RefreshChamsEsp()
end)

--<Manual Refresh>--
CreateButton(RefreshEspButton, 0.3, "Refresh")

RefreshEspButton.MouseButton1Click:Connect(function() -- button function
	RefreshEsp() -- uses all refresh functions
end)

function RefreshNameEsp() -- refresh the name esp by toggling off if its on, removing, then toggling back on, all of these removal functions are basically the same as any other time theyre used, need to make a removal function for them lol
	if Settings.NameEsp then
		Settings.NameEsp = false

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("NameEsp") ~= nil then
						v.Character.HumanoidRootPart.NameEsp:Destroy()
					end
				end
			end
		end
		Settings.NameEsp = true
	end
end

function RefreshBoxEsp() -- refresh the box esp by toggling off if its on, removing, then toggling back on
	if Settings.BoxEsp then
		Settings.BoxEsp = false

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("BoxEsp") ~= nil then
						v.Character.HumanoidRootPart.BoxEsp:Destroy()
					end
				end
			end
		end
		Settings.BoxEsp = true
	end
end

function RefreshChamsEsp() -- refresh the cham esp by toggling off if its on, removing, then toggling back on
	if Settings.ChamsEsp then
		Settings.ChamsEsp = false

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character then
				for _,v in pairs (v.Character:GetChildren()) do
					if v:IsA("MeshPart") or v.Name == "Head" or v.Name == "Torso" or v.Name == "Right Arm" or v.Name == "Left Arm" or v.Name == "Right Leg" or v.Name == "Left Leg" then
						for _,v in pairs(v:GetDescendants()) do
							if v:IsA("SurfaceGui") then
								v:Destroy()
							end
						end
					end
				end
			end
		end
		Settings.ChamsEsp = true
	end
end

function RefreshHealthEsp() -- refresh the health esp by toggling off if its on, removing, then toggling back on
	if Settings.HealthEsp then
		Settings.HealthEsp = false

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
					if v.Character.HumanoidRootPart:FindFirstChild("HealthEsp") ~= nil then
						v.Character.HumanoidRootPart.HealthEsp:Destroy()
					end
				end
			end
		end
		Settings.HealthEsp = true
	end
end

function RefreshAimBoneEsp() -- refresh the name esp by toggling off if its on, removing, then toggling back on
	if Settings.AimBoneEsp then
		Settings.AimBoneEsp = false

		for _,v in pairs (Players:GetPlayers()) do
			if v ~= LocalPlayer and v.Character ~= nil then
				if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
					if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
						v.Character[Settings.AimBone].AimBoneEsp:Destroy()
					end
				end
			end
		end
		Settings.AimBoneEsp = true
	end
end

function RefreshEsp() -- refresh all
	RefreshNameEsp()
	RefreshBoxEsp()
	RefreshHealthEsp()
	RefreshChamsEsp()
	RefreshAimBoneEsp()
end

function Update() -- now we get to the "update" function for health esp
	while wait() do -- every frame
		if Settings.HealthEsp then -- if health esp is on
			for _,v in pairs(Players:GetChildren()) do -- get all players
				if v ~= LocalPlayer and v.Character ~= nil then -- if not user and char can be found
					if v.Team ~= LocalPlayer.Team or not Settings.EspTeamCheck then -- if not on users team or if teamcheck is off
						if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then -- if root part can be found
							if v.Character.HumanoidRootPart:FindFirstChild("HealthEsp") == nil then -- if no instance of esp already exists
								HealthEspGui.Adornee = v.Character.HumanoidRootPart -- hook on to root part
								HealthEspGui:Clone().Parent = v.Character.HumanoidRootPart -- add ui
							end
						end
						if v ~= LocalPlayer and v.Character ~= nil then -- if not user and char can be found
							if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then -- if root part can be found
								if v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp") then -- if an instance of esp can be found
									if v.Character:FindFirstChild("Humanoid") then -- get the players humanoid which contains health info
										v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp").Text = "%"..math.floor(v.Character.Humanoid.Health).."" -- character health esp text will read % sign and then the rounded value of the characters health
										if v.Character.Humanoid.Health >= 75 then -- if 75 or above then make it green
											v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp").TextColor3 = Green
										elseif v.Character.Humanoid.Health >= 50 then -- if 50 or above make it yellow
											v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp").TextColor3 = Yellow
										elseif v.Character.Humanoid.Health >= 25 then -- if 25 or above make it orange
											v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp").TextColor3 = Orange
										elseif v.Character.Humanoid.Health >= 0 then -- if 0 or above make it red, no clue what happens if its negative but i dont think thats possible? maybe ill make it gray if negative
											v.Character.HumanoidRootPart.HealthEsp:FindFirstChild("Esp").TextColor3 = Red
										end
									end
								end
							end
						end
					end
				end
			end
		else
			for _,v in pairs (Players:GetPlayers()) do -- removal function for health esp
				if v ~= LocalPlayer and v.Character ~= nil then
					if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
						if v.Character.HumanoidRootPart:FindFirstChild("HealthEsp") ~= nil then
							v.Character.HumanoidRootPart.HealthEsp:Destroy()
						end
					end
				end
			end
		end
	end
end

---<Legit Options>---

--<Aimbot>--
CreateCheckBox(AimbotToggle, 0.1, dBlack) -- create aimbot toggle check box
CreateCheckBoxTitle(AimbotToggleTitle, "Aimbot") -- create title

AimbotToggle.MouseButton1Click:Connect(function() -- if aimbot toggle clicked
	Settings.Aimbot = not Settings.Aimbot -- toggle aimbot var

	if Settings.Aimbot then -- if on then toggle button background color = accentcolor
		AimbotToggle.BackgroundColor3 = Colors.AccentColor
	else -- else current secondary color (dark black for regular grey for light mode)
		AimbotToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

--<Aimbot Team Check>--
CreateCheckBox(AimbotTeamCheckToggle, 0.2, Colors.AccentColor) -- exact same for team check toggle
CreateCheckBoxTitle(AimbotTeamCheckToggleTitle, "Team Check")

AimbotTeamCheckToggle.MouseButton1Click:Connect(function()
	Settings.AimbotTeamCheck = not Settings.AimbotTeamCheck

	if Settings.AimbotTeamCheck then
		AimbotTeamCheckToggle.BackgroundColor3 = Colors.AccentColor
	else
		AimbotTeamCheckToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

--<Aimbot Key>--
CreateButton(AimbotKeyButton, 0.3, "Aimbot Key") -- now we have the aimkey button

AimbotKeyButton.MouseButton1Click:Connect(function() -- when clicked
	waitingforKey = true -- set waiting for key var to true
	AimbotKeyButton.Text = "Waiting For Key..." -- change button text
end)

--<Aimbot Smoothing>--
CreateTextLabel(AimbotSmoothingTextBox, 0.4, tostring(Settings.AimbotSmoothing)) -- make +- for aimbot smoothing
CreateTextLabelTitle(AimbotSmoothingTextBoxTitle, "Smoothing") -- create title and read smoothing
CreatevEdit(AimbotSmoothingvEdit1, AimbotSmoothingvEdit2) -- vedits

AimbotSmoothingvEdit1.MouseButton1Click:Connect(function() -- + vedit
	if Settings.AimbotSmoothing < 5 then -- if smoothing is less than 5
		Settings.AimbotSmoothing = Settings.AimbotSmoothing + 1 -- add one

		if Settings.AimbotSmoothing == 1 then -- if smoothing = 1
			Settings.ActualSpeed = 0.25 -- actual speed or tween speed in seconds = 0.25 seconds
		elseif Settings.AimbotSmoothing == 2 then -- if 2 then
			Settings.ActualSpeed = 0.5 -- 0.5 seconds and so on
		elseif Settings.AimbotSmoothing == 3 then
			Settings.ActualSpeed = 0.75
		elseif Settings.AimbotSmoothing == 4  then
			Settings.ActualSpeed = 1
		elseif Settings.AimbotSmoothing == 5 then
			Settings.ActualSpeed = 1.25
		end
	else
		Settings.AimbotSmoothing = 5 -- if somehow greater than 5 then set back to 5
		Settings.ActualSpeed = 1.25 -- set tween speed
	end

	AimbotSmoothingTextBox.Text = Settings.AimbotSmoothing -- update text for center ui
end)

AimbotSmoothingvEdit2.MouseButton1Click:Connect(function() -- - vedit
	if Settings.AimbotSmoothing > 0 then -- if greater than 0 then
		Settings.AimbotSmoothing = Settings.AimbotSmoothing - 1 -- subtract one

		if Settings.AimbotSmoothing == 0 then -- this time we can go down to 0 so we set the tween speed to the lowest speed we have aka 0.05
			Settings.ActualSpeed = 0.05
		elseif Settings.AimbotSmoothing == 1 then
			Settings.ActualSpeed = 0.25
		elseif Settings.AimbotSmoothing == 2 then
			Settings.ActualSpeed = 0.5
		elseif Settings.AimbotSmoothing == 3  then
			Settings.ActualSpeed = 0.75
		elseif Settings.AimbotSmoothing == 4 then
			Settings.ActualSpeed = 1
		end
	else
		Settings.AimbotSmoothing = 0 -- if somehow less than 0 then set back to 0
		Settings.ActualSpeed = 0.05
	end

	AimbotSmoothingTextBox.Text = Settings.AimbotSmoothing -- update text
end)

--<Aim Bones>--
CreateBone(AimbotHeadBone, 0.5, 0.24, Red) -- create head bone ui

AimbotHeadBone.MouseButton1Click:Connect(function() -- head bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "Head" -- change aim bone

	AimbotHeadBone.ImageColor3 = Red -- change ui colors
	AimbotRootBone.ImageColor3 = White
	AimbotLeftArmBone.ImageColor3 = White
	AimbotRightArmBone.ImageColor3 = White
	AimbotLeftLegBone.ImageColor3 = White
	AimbotRightLegBone.ImageColor3 = White
end)

CreateBone(AimbotRootBone, 0.5, 0.45, White) -- humanoid root part or chest bone

AimbotRootBone.MouseButton1Click:Connect(function() -- root bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "HumanoidRootPart" -- change aim bone

	AimbotHeadBone.ImageColor3 = White -- change ui colors
	AimbotRootBone.ImageColor3 = Red
	AimbotLeftArmBone.ImageColor3 = White
	AimbotRightArmBone.ImageColor3 = White
	AimbotLeftLegBone.ImageColor3 = White
	AimbotRightLegBone.ImageColor3 = White
end)

CreateBone(AimbotLeftArmBone, 0.75, 0.37, White)

AimbotLeftArmBone.MouseButton1Click:Connect(function() -- left arm bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "Left Arm" -- change aim bone

	AimbotHeadBone.ImageColor3 = White -- change ui colors
	AimbotRootBone.ImageColor3 = White
	AimbotLeftArmBone.ImageColor3 = Red
	AimbotRightArmBone.ImageColor3 = White
	AimbotLeftLegBone.ImageColor3 = White
	AimbotRightLegBone.ImageColor3 = White
end)

CreateBone(AimbotRightArmBone, .25, 0.37, White)

AimbotRightArmBone.MouseButton1Click:Connect(function() -- right arm bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "Right Arm" -- change aim bone

	AimbotHeadBone.ImageColor3 = White -- change ui colors
	AimbotRootBone.ImageColor3 = White
	AimbotLeftArmBone.ImageColor3 = White
	AimbotRightArmBone.ImageColor3 = Red
	AimbotLeftLegBone.ImageColor3 = White
	AimbotRightLegBone.ImageColor3 = White
end)

CreateBone(AimbotLeftLegBone, 0.56, 0.7, White)

AimbotLeftLegBone.MouseButton1Click:Connect(function() -- left leg bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "Left Leg" -- change aim bone

	AimbotHeadBone.ImageColor3 = White -- change ui colors
	AimbotRootBone.ImageColor3 = White
	AimbotLeftArmBone.ImageColor3 = White
	AimbotRightArmBone.ImageColor3 = White
	AimbotLeftLegBone.ImageColor3 = Red
	AimbotRightLegBone.ImageColor3 = White
end)

CreateBone(AimbotRightLegBone, 0.44, 0.7, White)

AimbotRightLegBone.MouseButton1Click:Connect(function() -- right leg bone button function
	for _,v in pairs (Players:GetPlayers()) do -- remove active esp
		if v ~= LocalPlayer and v.Character ~= nil then
			if v.Character:FindFirstChild(Settings.AimBone) ~= nil then
				if v.Character[Settings.AimBone]:FindFirstChild("AimBoneEsp") ~= nil then
					v.Character[Settings.AimBone].AimBoneEsp:Destroy()
				end
			end
		end
	end

	Settings.AimBone = "Right Leg" -- change aim bone

	AimbotHeadBone.ImageColor3 = White -- change ui colors
	AimbotRootBone.ImageColor3 = White
	AimbotLeftArmBone.ImageColor3 = White
	AimbotRightArmBone.ImageColor3 = White
	AimbotLeftLegBone.ImageColor3 = White
	AimbotRightLegBone.ImageColor3 = Red
end)

game:GetService("RunService").RenderStepped:Connect(function() -- finally we get to the actual aimbot function
	if not Settings.Aimbot or not Settings.AimbotAiming or not Settings.AimbotKey then -- if aimbot is off or aimbot key is not current being held or there is no aimkey then
		return -- return until all these parameters are met
	end

	local distance = math.huge -- distance is currently huge
	local target = nil -- target player

	for _, v in pairs (Players:GetChildren()) do -- for all players
		if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") then -- if not localplayer and can find character and can find characters humanoid
			local humanoid = v.Character:FindFirstChild("Humanoid") -- make variable for humanoid
			local aimbone = v.Character:FindFirstChild(Settings.AimBone) -- aimbone = find settings.aimbone part

			if humanoid.Health > 0 and aimbone then -- if "humanoid" aka target players health is greater than 0 and the aimbone is found then
				local plr = v.Character -- character var
				local plrBone, onscreen = game.Workspace.CurrentCamera:WorldToViewportPoint(aimbone.Position) -- this time the bone var is going to be the aimbones position in worldtoviewportpoint or 3d to 2d

				if (Settings.AimbotTeamCheck and v.Team ~= LocalPlayer.Team) or not Settings.AimbotTeamCheck then -- if aimbot teamcheck and targets team doesnt equal localplayers team OR aimbot teamcheck is off
					if onscreen then -- if target is on screen
						local mousePosition = Vector2.new(Mouse.X, Mouse.Y) -- get players mouse pos
						local magnitude = (mousePosition - Vector2.new(plrBone.X, plrBone.Y)).magnitude -- magnitude of mouse xy position - 2d position of targets xy selected bone

						if magnitude < distance then -- if the magnitude is less than the max distance
							distance = magnitude -- distance is = to magnitude
							target = plr -- finally we set the player that passed all of these parameters as the target
						end
					end
				end
			end
		end
	end

	if target and target:FindFirstChild("Humanoid") and target:FindFirstChild(Settings.AimBone) then -- if we have a target and the target still has a humanoid and the aimbone then
		local humanoid = target:FindFirstChild("Humanoid") -- target humanoid variable

		if humanoid.Health > 0 then -- if target health is over 0
			local activeBonePosition = target[Settings.AimBone].Position -- get the aimbone position in 3d, now were getting ready to lock
			local cameraPosition = game.Workspace.CurrentCamera.CFrame.Position -- get the users camera position

			local tween = game.TweenService:create(game.Workspace.CurrentCamera, TweenInfo.new(Settings.ActualSpeed), {CFrame = CFrame.new(cameraPosition, activeBonePosition)}) -- smoothly glide our camera position to be looking dead center at the players aimbone
			tween:Play() -- play the animation or tween or lock

			UserInputService.InputEnded:Connect(function(Input) -- now just in case the user lets go of the aim key
				if Input.KeyCode == Settings.AimbotKey then -- if the key let go is the aim key
					Settings.AimbotAiming = false -- aiming is no longer true
					tween:Cancel() -- cancel the anim or lock
					return -- go back to the start
				end
			end)
		end
	end
end)

---<Rage Options>---

--<Anti Aim>--
CreateCheckBox(AntiAimToggle, 0.1, dBlack) -- now to our anti aim
CreateCheckBoxTitle(AntiAimToggleTitle, "Anti Aim") -- title for check box

AntiAimToggle.MouseButton1Click:Connect(function() -- set aa var true
	Settings.AntiAim = not Settings.AntiAim

	if Settings.AntiAim then
		AntiAimToggle.BackgroundColor3 = Colors.AccentColor
	else
		AntiAimToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

function flipLeft() -- for flipping left
	if Settings.AntiAim and Settings.AntiAimFlip then -- if aa and aa flipper is enabled then
		if LocalPlayer.Character.Humanoid.Health > 0 then -- if user health is above 0 then
			local camera = game.Workspace.CurrentCamera -- get user camera
			local cameraRotation = camera.CFrame - camera.CFrame.p -- find cam rotation with cframe - cframe position
			local newPosition = LocalPlayer.Character.HumanoidRootPart.Position - cameraRotation.RightVector * Settings.AntiAimFlipDist -- find new position with user pos - camera rotation left vector * flip distance
			LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(newPosition))
		end
	end
end

function flipRight() -- same thing but were doing + instead of -
	if Settings.AntiAim and Settings.AntiAimFlip then
		if LocalPlayer.Character.Humanoid.Health > 0 then
			local camera = game.Workspace.CurrentCamera
			local cameraRotation = camera.CFrame - camera.CFrame.p
			local newPosition = LocalPlayer.Character.HumanoidRootPart.Position + cameraRotation.RightVector * Settings.AntiAimFlipDist
			LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(newPosition))
		end
	end
end

CreateTextLabel(AntiAimSpinSpeedTextBox, 0.2, tostring(Settings.AntiAimSpinSpeed)) -- just changing spin speed var
CreateTextLabelTitle(AntiAimSpinSpeedTextBoxTitle, "Spin Speed")
CreatevEdit(AntiAimSpinSpeedvEdit1, AntiAimSpinSpeedvEdit2)

AntiAimSpinSpeedvEdit1.MouseButton1Click:Connect(function()
	if Settings.AntiAimSpinSpeed < 180 then -- less than 180
		Settings.AntiAimSpinSpeed = Settings.AntiAimSpinSpeed + 10 -- add 10
	end

	AntiAimSpinSpeedTextBox.Text = tostring(Settings.AntiAimSpinSpeed) -- change text
end)

AntiAimSpinSpeedvEdit2.MouseButton1Click:Connect(function()
	if Settings.AntiAimSpinSpeed > 60 then -- greater than 60
		Settings.AntiAimSpinSpeed = Settings.AntiAimSpinSpeed - 10 -- subtract 10
	end

	AntiAimSpinSpeedTextBox.Text = tostring(Settings.AntiAimSpinSpeed)
end)

CreateCheckBox(AntiAimFlipToggle, 0.3, dBlack) -- toggle aa flip var
CreateCheckBoxTitle(AntiAimFlipToggleTitle, "Anti Aim Flip")

AntiAimFlipToggle.MouseButton1Click:Connect(function()
	Settings.AntiAimFlip = not Settings.AntiAimFlip

	if Settings.AntiAimFlip then
		AntiAimFlipToggle.BackgroundColor3 = Colors.AccentColor
	else
		AntiAimFlipToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

CreateTextLabel(AntiAimFlipDistanceTextBox, 0.4, tostring(Settings.AntiAimFlipDist)) -- change flip distance
CreateTextLabelTitle(AntiAimFlipDistanceTextBoxTitle, "Flip Distance")
CreatevEdit(AntiAimFlipDistancevEdit1, AntiAimFlipDistancevEdit2)

AntiAimFlipDistancevEdit1.MouseButton1Click:Connect(function()
	if Settings.AntiAimFlipDist < 3 then -- i hope you get it at this point
		Settings.AntiAimFlipDist = Settings.AntiAimFlipDist + 1
	end

	AntiAimFlipDistanceTextBox.Text = tostring(Settings.AntiAimFlipDist)
end)

AntiAimFlipDistancevEdit2.MouseButton1Click:Connect(function()
	if Settings.AntiAimFlipDist > 1 then
		Settings.AntiAimFlipDist = Settings.AntiAimFlipDist - 1
	end

	AntiAimFlipDistanceTextBox.Text = tostring(Settings.AntiAimFlipDist)
end)

CreateTextLabel(AntiAimFlipSpeedTextBox, 0.5, tostring(Settings.AntiAimFlipFrequency)) -- how fast it flips
CreateTextLabelTitle(AntiAimFlipSpeedTextBoxTitle, "Flip Speed")
CreatevEdit(AntiAimFlipSpeedvEdit1, AntiAimFlipSpeedvEdit2)

AntiAimFlipSpeedvEdit1.MouseButton1Click:Connect(function()
	if Settings.AntiAimFlipFrequency < 5 then
		Settings.AntiAimFlipFrequency = Settings.AntiAimFlipFrequency + 1
	end

	if Settings.AntiAimFlipFrequency == 2 then -- same idea as aimbotspeed and actualspeed
		Settings.AntiAimFlipSpeed = 0.4
	elseif Settings.AntiAimFlipFrequency == 3 then
		Settings.AntiAimFlipSpeed = 0.3
	elseif Settings.AntiAimFlipFrequency == 4 then
		Settings.AntiAimFlipSpeed = 0.2
	elseif Settings.AntiAimFlipFrequency == 5 then
		Settings.AntiAimFlipSpeed = 0.1
	end

	AntiAimFlipSpeedTextBox.Text = tostring(Settings.AntiAimFlipFrequency)
end)

AntiAimFlipSpeedvEdit2.MouseButton1Click:Connect(function()
	if Settings.AntiAimFlipFrequency > 1 then
		Settings.AntiAimFlipFrequency = Settings.AntiAimFlipFrequency - 1
	end

	if Settings.AntiAimFlipFrequency == 1 then
		Settings.AntiAimFlipSpeed = 0.5
	elseif Settings.AntiAimFlipFrequency == 2 then
		Settings.AntiAimFlipSpeed = 0.4
	elseif Settings.AntiAimFlipFrequency == 3 then
		Settings.AntiAimFlipSpeed = 0.3
	elseif Settings.AntiAimFlipFrequency == 4 then -- before we had no need to change for 1 because the minimum is one and we would never add up until one just subtract until one, same idea just dont need 5 here
		Settings.AntiAimFlipSpeed = 0.2
	end

	AntiAimFlipSpeedTextBox.Text = tostring(Settings.AntiAimFlipFrequency) -- change text
end)

--<Fake Lag>--
CreateCheckBox(FakeLagToggle, 0.6, dBlack) -- fake lag check box
CreateCheckBoxTitle(FakeLagToggleTitle, "Fake Lag")

FakeLagToggle.MouseButton1Click:Connect(function()
	Settings.FakeLag = not Settings.FakeLag

	if Settings.FakeLag then
		FakeLagToggle.BackgroundColor3 = Colors.AccentColor
	else
		FakeLagToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

CreateTextLabel(FakeLagDistanceTextBox, 0.7, tostring(Settings.FakeLagDist)) -- distance the teleport sends you
CreateTextLabelTitle(FakeLagDistanceTextBoxTitle, "Fake Lag Distance")
CreatevEdit(FakeLagDistancevEdit1, FakeLagDistancevEdit2)

FakeLagDistancevEdit1.MouseButton1Click:Connect(function()
	if Settings.FakeLagDist < 5 then
		Settings.FakeLagDist = Settings.FakeLagDist + 0.5
	end

	FakeLagDistanceTextBox.Text = tostring(Settings.FakeLagDist)
end)

FakeLagDistancevEdit2.MouseButton1Click:Connect(function()
	if Settings.FakeLagDist > 0.5 then
		Settings.FakeLagDist = Settings.FakeLagDist - 0.5
	end

	FakeLagDistanceTextBox.Text = tostring(Settings.FakeLagDist)
end)

CreateTextLabel(FakeLagSpeedTextBox, 0.8, tostring(Settings.FakeLagFrequency)) -- how often the teleport happens, if these are both maxed then there is a chance you will tp thru thin surfaces
CreateTextLabelTitle(FakeLagSpeedTextBoxTitle, "Fake Lag Frequency")
CreatevEdit(FakeLagSpeedvEdit1, FakeLagSpeedvEdit2)

FakeLagSpeedvEdit1.MouseButton1Click:Connect(function()
	if Settings.FakeLagFrequency < 5 then
		Settings.FakeLagFrequency = Settings.FakeLagFrequency + 1
	end

	if Settings.FakeLagFrequency == 5 then -- again same idea as aimbotspeed and actualspeed
		Settings.FakeLagSpeed = 0.2
	elseif Settings.FakeLagFrequency == 4 then
		Settings.FakeLagSpeed = 0.4
	elseif Settings.FakeLagFrequency == 3 then
		Settings.FakeLagSpeed = 0.6
	elseif Settings.FakeLagFrequency == 2 then
		Settings.FakeLagSpeed = 0.8
	end

	FakeLagSpeedTextBox.Text = tostring(Settings.FakeLagFrequency) -- updating text
end)

FakeLagSpeedvEdit2.MouseButton1Click:Connect(function()
	if Settings.FakeLagFrequency > 1 then
		Settings.FakeLagFrequency = Settings.FakeLagFrequency - 1
	end

	if Settings.FakeLagFrequency == 4 then
		Settings.FakeLagSpeed = 0.4
	elseif Settings.FakeLagFrequency == 3 then
		Settings.FakeLagSpeed = 0.6
	elseif Settings.FakeLagFrequency == 2 then
		Settings.FakeLagSpeed = 0.8
	elseif Settings.FakeLagFrequency == 1 then
		Settings.FakeLagSpeed = 1
	end

	FakeLagSpeedTextBox.Text = tostring(Settings.FakeLagFrequency)
end)

local function FakeLag() -- fake lag function
	if Settings.FakeLag then -- if fake lag enabled
		if LocalPlayer.Character then -- if localplayers character then
			if LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then -- if humanoid root part
				local velocity = LocalPlayer.Character.HumanoidRootPart.Velocity -- velocity var to see if user is moving
				if velocity.Magnitude > 0.5 then -- if they are moving then
					local teleportDirection = velocity.Unit * Settings.FakeLagDist -- direction of teleport becomes the direction of the veloctiy * distance of fake lag
					local newPosition = LocalPlayer.Character.HumanoidRootPart.Position + teleportDirection -- new pos is users pos + that teleport direction var we just made
					LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(newPosition) -- set the users new position
				end
			end
		end
	end
end

--<Third Person>--
CreateCheckBox(ThirdPersonToggle, 0.1, dBlack) -- toggle force third person
CreateCheckBoxTitle(ThirdPersonToggleTitle, "Force Third Person")

ThirdPersonToggle.MouseButton1Click:Connect(function() -- button click
	Settings.ThirdPerson = not Settings.ThirdPerson -- toggle third person

	if Settings.ThirdPerson then -- if on then
		ThirdPersonToggle.BackgroundColor3 = Colors.AccentColor -- set color

		while Settings.ThirdPerson do -- while third person is true do
			wait(0.1) -- wait so we dont crash the game
			LocalPlayer.CameraMaxZoomDistance = Settings.ThirdPersonDist -- set the max and min to the set third person distance
			LocalPlayer.CameraMinZoomDistance = Settings.ThirdPersonDist
		end
	else
		wait(0.1) -- now we wait so that this code doesnt run before the last force third person code runs
		ThirdPersonToggle.BackgroundColor3 = CurrentSecondaryColor

		LocalPlayer.CameraMinZoomDistance = 0 -- min zoom is 0
		LocalPlayer.CameraMaxZoomDistance = Settings.CamDist -- max zoom dist is whatever it was before
	end
end)

CreateTextLabel(ThirdPersonDistanceTextBox, 0.2, tostring(Settings.ThirdPersonDist)) -- distance editor
CreateTextLabelTitle(ThirdPersonDistanceTextBoxTitle, "Third Person Distance")
CreatevEdit(ThirdPersonDistancevEdit1, ThirdPersonDistancevEdit2)

ThirdPersonDistancevEdit1.MouseButton1Click:Connect(function()
	if Settings.ThirdPersonDist < 40 then
		Settings.ThirdPersonDist = Settings.ThirdPersonDist + 5
	end

	ThirdPersonDistanceTextBox.Text = tostring(Settings.ThirdPersonDist)
end)

ThirdPersonDistancevEdit2.MouseButton1Click:Connect(function()
	if Settings.ThirdPersonDist > 5 then
		Settings.ThirdPersonDist = Settings.ThirdPersonDist - 5
	end

	if Settings.ThirdPerson then
		LocalPlayer.CameraMinZoomDistance = Settings.ThirdPersonDist
		LocalPlayer.CameraMaxZoomDistance = Settings.ThirdPersonDist
	end

	ThirdPersonDistanceTextBox.Text = tostring(Settings.ThirdPersonDist)
end)

---<Misc Options>---

--<Watermark>--
CreateCheckBox(WatermarkToggle, 0.1, Colors.AccentColor) -- create watermark toggle check box
CreateCheckBoxTitle(WatermarkToggleTitle, "Watermark Toggle") -- create title for watermark toggle check box

WatermarkToggle.MouseButton1Click:Connect(function() -- watermark check box function
	WatermarkGui.Enabled = not WatermarkGui.Enabled

	if WatermarkGui.Enabled then
		WatermarkToggle.BackgroundColor3 = Colors.AccentColor
	else
		WatermarkToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

--<Chat Spam>--
CreateCheckBox(ChatSpamToggle, 0.2, dBlack) -- create chat spam toggle check box
CreateCheckBoxTitle(ChatSpamToggleTitle, "Chat Spammer") -- create title for watermark toggle check box

ChatSpamToggle.MouseButton1Click:Connect(function() -- chat spam check box function
	Settings.ChatSpam = not Settings.ChatSpam

	if Settings.ChatSpam then
		ChatSpamToggle.BackgroundColor3 = Colors.AccentColor
	else
		ChatSpamToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

coroutine.wrap(function() -- isolate while wait function so it doesnt interfere
	while wait() do
		if Settings.ChatSpam then -- if cham spam on then execute chat spammer function
			ChatSpam()
		end
	end
end)()

--<Fov Changer>--
CreateTextLabel(FovChangerTextBox, 0.3, tostring(Settings.FovValue)) -- create fov changer value text label
CreateTextLabelTitle(FovChangerTextBoxTitle, "Fov Changer") -- create title
CreatevEdit(FovChangervEdit1, FovChangervEdit2) -- create +-

FovChangervEdit1.MouseButton1Click:Connect(function() -- when + clicked
	if Settings.FovValue < 120 then -- if fov greater than 20
		Settings.FovValue = Settings.FovValue + 5 -- add 5
	else
		Settings.FovValue = 120 -- if it is somehow greater than 120 set to 120
	end

	FovChangerTextBox.Text = Settings.FovValue

	coroutine.wrap(function()
		game.Workspace.CurrentCamera.FieldOfView = Settings.FovValue
		wait()
	end)()
end)

FovChangervEdit2.MouseButton1Click:Connect(function() -- when - clicked
	if Settings.FovValue > 20 then -- if greater than 20
		Settings.FovValue = Settings.FovValue - 5 -- subtract 5
	else
		Settings.FovValue = 20 -- if less than 20 set back to 20
	end

	FovChangerTextBox.Text = Settings.FovValue

	coroutine.wrap(function()
		game.Workspace.CurrentCamera.FieldOfView = Settings.FovValue
		wait()
	end)()
end)

--<Crosshair>--
CreateCheckBox(CrosshairToggle, 0.4, dBlack) -- create check box for crosshair
CreateCheckBoxTitle(CrosshairToggleTitle, "Crosshair") -- create title for crosshair check box

CrosshairToggle.MouseButton1Click:Connect(function()
	Crosshair.Visible = not Crosshair.Visible

	if Crosshair.Visible then
		CrosshairToggle.BackgroundColor3 = Colors.AccentColor
	else
		CrosshairToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)


--<Console>--
CreateCheckBox(ConsoleToggle, 0.1, dBlack) -- create check box for console
CreateCheckBoxTitle(ConsoleToggleTitle, "Console") -- title

ConsoleToggle.MouseButton1Click:Connect(function()
	ConsoleBase.Visible = not ConsoleBase.Visible

	if ConsoleBase.Visible  then
		ConsoleToggle.BackgroundColor3 = Colors.AccentColor
	else
		ConsoleToggle.BackgroundColor3 = CurrentSecondaryColor
	end
end)

---<Colors Options>---

--<Name Esp Color>--
CreateColorTitle(NameEspColorTitle, 0.1, "Name Esp") -- create the title
CreateColorPreview(NameEspColorPreview, Colors.NameEspColor) -- create the preview box
CreateRGB(NameEspColorR, NameEspColorG, NameEspColorB, 255, 255, 255) -- create the custom value boxes

NameEspColorR.FocusLost:Connect(function() -- once the player is done typing in the value box, execute a function
	local c1 = NameEspColorR.Text -- make 3 vars, one for red, one for green, and one for blue
	local c2 = NameEspColorG.Text
	local c3 = NameEspColorB.Text

	Colors.NameEspColor = Color3.fromRGB(c1, c2 , c3) -- table value set to color(redVar, greenVar, blueVar)

	NameEspColorPreview.BackgroundColor3 = Colors.NameEspColor --  preview box set to the color

	RefreshNameEsp() -- finally update the color of the esp if it is active
end)

NameEspColorG.FocusLost:Connect(function() -- same for the green value box
	local c1 = NameEspColorR.Text
	local c2 = NameEspColorG.Text
	local c3 = NameEspColorB.Text

	Colors.NameEspColor = Color3.fromRGB(c1, c2 , c3)

	NameEspColorPreview.BackgroundColor3 = Colors.NameEspColor

	RefreshNameEsp()
end)

NameEspColorB.FocusLost:Connect(function() -- and one more for blue
	local c1 = NameEspColorR.Text
	local c2 = NameEspColorG.Text
	local c3 = NameEspColorB.Text

	Colors.NameEspColor = Color3.fromRGB(c1, c2 , c3)

	NameEspColorPreview.BackgroundColor3 = Colors.NameEspColor

	RefreshNameEsp()
end)

--<Box Esp Color>--
CreateColorTitle(BoxEspColorTitle, 0.21, "Box Esp")
CreateColorPreview(BoxEspColorPreview, Colors.BoxEspColor)
CreateRGB(BoxEspColorR, BoxEspColorG, BoxEspColorB, 255, 255, 255)

BoxEspColorR.FocusLost:Connect(function() -- this time for box esp
	local c1 = BoxEspColorR.Text
	local c2 = BoxEspColorG.Text
	local c3 = BoxEspColorB.Text

	Colors.BoxEspColor = Color3.fromRGB(c1, c2 , c3)

	BoxEspColorPreview.BackgroundColor3 = Colors.BoxEspColor

	RefreshBoxEsp()
end)

BoxEspColorG.FocusLost:Connect(function()
	local c1 = BoxEspColorR.Text
	local c2 = BoxEspColorG.Text
	local c3 = BoxEspColorB.Text

	Colors.BoxEspColor = Color3.fromRGB(c1, c2 , c3)

	BoxEspColorPreview.BackgroundColor3 = Colors.BoxEspColor

	RefreshBoxEsp()
end)

BoxEspColorB.FocusLost:Connect(function()
	local c1 = BoxEspColorR.Text
	local c2 = BoxEspColorG.Text
	local c3 = BoxEspColorB.Text

	Colors.BoxEspColor = Color3.fromRGB(c1, c2 , c3)

	BoxEspColorPreview.BackgroundColor3 = Colors.BoxEspColor

	RefreshBoxEsp()
end)

--<Chams Esp Color>--
CreateColorTitle(ChamsEspColorTitle, 0.32, "Chams Esp")
CreateColorPreview(ChamsEspColorPreview, Colors.ChamsEspColor)
CreateRGB(ChamsEspColorR, ChamsEspColorG, ChamsEspColorB, 255, 255, 255)

ChamsEspColorR.FocusLost:Connect(function() -- chams esp and so on
	local c1 = ChamsEspColorR.Text
	local c2 = ChamsEspColorG.Text
	local c3 = ChamsEspColorB.Text

	Colors.ChamsEspColor = Color3.fromRGB(c1, c2, c3)

	ChamsEspColorPreview.BackgroundColor3 = Colors.ChamsEspColor

	RefreshChamsEsp()
end)

ChamsEspColorG.FocusLost:Connect(function()
	local c1 = ChamsEspColorR.Text
	local c2 = ChamsEspColorG.Text
	local c3 = ChamsEspColorB.Text

	Colors.ChamsEspColor = Color3.fromRGB(c1, c2, c3)

	ChamsEspColorPreview.BackgroundColor3 = Colors.ChamsEspColor

	RefreshChamsEsp()
end)

ChamsEspColorB.FocusLost:Connect(function()
	local c1 = ChamsEspColorR.Text
	local c2 = ChamsEspColorG.Text
	local c3 = ChamsEspColorB.Text

	Colors.ChamsEspColor = Color3.fromRGB(c1, c2, c3)

	ChamsEspColorPreview.BackgroundColor3 = Colors.ChamsEspColor

	RefreshChamsEsp()
end)

--<Aim Bone Esp Color>--
CreateColorTitle(AimBoneEspColorTitle, 0.43, "Aim Bone Esp")
CreateColorPreview(AimBoneEspColorPreview, Colors.AimBoneEspColor)
CreateRGB(AimBoneEspColorR, AimBoneEspColorG, AimBoneEspColorB, 255, 255, 255)

AimBoneEspColorR.FocusLost:Connect(function()
	local c1 = AimBoneEspColorR.Text -- CAN MAKE 1 FUNCTION FOR ALL OF THESE, LEAVE REFRESH AND JUST CALL THE FUNCTION UNDER CONNECT. THEN USE PARAMETERS TO SET AIMBONE OR NAME, BOX ETC	note: tried this didnt work at all and gave up
	local c2 = AimBoneEspColorG.Text
	local c3 = AimBoneEspColorB.Text

	Colors.AimBoneEspColor = Color3.fromRGB(c1, c2, c3)

	AimBoneEspColorPreview.BackgroundColor3 = Colors.AimBoneEspColor

	RefreshAimBoneEsp()
end)

AimBoneEspColorG.FocusLost:Connect(function()
	local c1 = AimBoneEspColorR.Text
	local c2 = AimBoneEspColorG.Text
	local c3 = AimBoneEspColorB.Text

	Colors.AimBoneEspColor = Color3.fromRGB(c1, c2, c3)

	AimBoneEspColorPreview.BackgroundColor3 = Colors.AimBoneEspColor

	RefreshAimBoneEsp()
end)

AimBoneEspColorB.FocusLost:Connect(function()
	local c1 = AimBoneEspColorR.Text
	local c2 = AimBoneEspColorG.Text
	local c3 = AimBoneEspColorB.Text

	Colors.AimBoneEspColor = Color3.fromRGB(c1, c2, c3)

	AimBoneEspColorPreview.BackgroundColor3 = Colors.AimBoneEspColor

	RefreshAimBoneEsp()
end)

--<Menu Color>--
CreateColorTitle(MenuColorTitle, 0.1, "Menu Accent")
CreateColorPreview(MenuColorPreview, Colors.AccentColor)
CreateRGB(MenuColorR, MenuColorG, MenuColorB, 255, 100, 255)

MenuColorR.FocusLost:Connect(function()
	local c1 = MenuColorR.Text
	local c2 = MenuColorG.Text
	local c3 = MenuColorB.Text

	Colors.AccentColor = Color3.fromRGB(c1, c2, c3)

	MenuColorPreview.BackgroundColor3 = Colors.AccentColor

	UpdateUiElements() -- this one is for the menu accent, we are using this function to update all the separate elements
end)

MenuColorG.FocusLost:Connect(function()
	local c1 = MenuColorR.Text
	local c2 = MenuColorG.Text
	local c3 = MenuColorB.Text

	Colors.AccentColor = Color3.fromRGB(c1, c2, c3)

	MenuColorPreview.BackgroundColor3 = Colors.AccentColor

	UpdateUiElements()
end)

MenuColorB.FocusLost:Connect(function()
	local c1 = MenuColorR.Text
	local c2 = MenuColorG.Text
	local c3 = MenuColorB.Text

	Colors.AccentColor = Color3.fromRGB(c1, c2, c3)

	MenuColorPreview.BackgroundColor3 = Colors.AccentColor

	UpdateUiElements()
end)

--<Menu Light Mode>--
CreateCheckBox(MenuLightModeToggle, 0.4, dBlack)
CreateCheckBoxTitle(MenuLightModeToggleTitle, "Light Mode")

MenuLightModeToggle.MouseButton1Click:Connect(function()
	ToggleLightMode()
end)

--<Crosshair Color>--
CreateColorTitle(CrosshairColorTitle, 0.1, "Crosshair Color")
CreateColorPreview(CrosshairColorPreview, Colors.CrosshairColor)
CreateRGB(CrosshairColorR, CrosshairColorG, CrosshairColorB, 255, 255, 255)

CrosshairColorR.FocusLost:Connect(function()
	local c1 = CrosshairColorR.Text
	local c2 = CrosshairColorG.Text
	local c3 = CrosshairColorB.Text

	Colors.CrosshairColor = Color3.fromRGB(c1, c2, c3)

	CrosshairColorPreview.BackgroundColor3 = Colors.CrosshairColor

	Crosshair.ImageColor3 = Colors.CrosshairColor
end)

CrosshairColorG.FocusLost:Connect(function()
	local c1 = CrosshairColorR.Text
	local c2 = CrosshairColorG.Text
	local c3 = CrosshairColorB.Text

	Colors.CrosshairColor = Color3.fromRGB(c1, c2, c3)

	CrosshairColorPreview.BackgroundColor3 = Colors.CrosshairColor

	Crosshair.ImageColor3 = Colors.CrosshairColor
end)

CrosshairColorB.FocusLost:Connect(function()
	local c1 = CrosshairColorR.Text
	local c2 = CrosshairColorG.Text
	local c3 = CrosshairColorB.Text

	Colors.CrosshairColor = Color3.fromRGB(c1, c2, c3)

	CrosshairColorPreview.BackgroundColor3 = Colors.CrosshairColor

	Crosshair.ImageColor3 = Colors.CrosshairColor
end)

--<Console Color>--
CreateColorTitle(ConsoleColorTitle, 0.35, "Console Color")
CreateColorPreview(ConsoleColorPreview, Colors.ConsoleColor)
CreateRGB(ConsoleColorR, ConsoleColorG, ConsoleColorB, 0, 0, 0)

ConsoleColorR.FocusLost:Connect(function()
	local c1 = ConsoleColorR.Text
	local c2 = ConsoleColorG.Text
	local c3 = ConsoleColorB.Text

	Colors.ConsoleColor = Color3.fromRGB(c1, c2, c3)

	ConsoleColorPreview.BackgroundColor3 = Colors.ConsoleColor

	ConsoleBase.BackgroundColor3 = Colors.ConsoleColor
	ConsoleCommandsList.BackgroundColor3 = Colors.ConsoleColor
end)

ConsoleColorG.FocusLost:Connect(function()
	local c1 = ConsoleColorR.Text
	local c2 = ConsoleColorG.Text
	local c3 = ConsoleColorB.Text

	Colors.ConsoleColor = Color3.fromRGB(c1, c2, c3)

	ConsoleColorPreview.BackgroundColor3 = Colors.ConsoleColor

	ConsoleBase.BackgroundColor3 = Colors.ConsoleColor
	ConsoleCommandsList.BackgroundColor3 = Colors.ConsoleColor
end)

ConsoleColorB.FocusLost:Connect(function()
	local c1 = ConsoleColorR.Text
	local c2 = ConsoleColorG.Text
	local c3 = ConsoleColorB.Text

	Colors.ConsoleColor = Color3.fromRGB(c1, c2, c3)

	ConsoleColorPreview.BackgroundColor3 = Colors.ConsoleColor

	ConsoleBase.BackgroundColor3 = Colors.ConsoleColor
	ConsoleCommandsList.BackgroundColor3 = Colors.ConsoleColor
end)

---<Extra Functions>---

function zigzag(X) return math.acos(math.cos(X*math.pi))/math.pi end -- for rainbow

function rainbow()
	coroutine.wrap(function()
		while wait(0.1) do -- every 0.1 seconds
			if Settings.Rainbow then -- if rainbow is enabled then
				Colors.AccentColor = Color3.fromHSV(zigzag(Counter),1,1) -- accentcolor changes by 0.01 (hsv)
				UpdateUiElements() -- update ui element
				Counter = Counter + 0.01 -- add to counter
			else
				Colors.AccentColor = Color3.fromRGB(MenuColorR.Text, MenuColorG.Text, MenuColorB.Text) -- else set the accent color back, tbh did not make this rainbow script just stole the zigzag function and the hsv values
				UpdateUiElements() -- update
			end
		end
	end)()
end

UserInputService.InputBegan:Connect(function(input) -- uis or user input service allows you to execute code or a function on a key press, then we have the input parameter
	if input.KeyCode == Enum.KeyCode.RightShift or input.KeyCode == Enum.KeyCode.Insert then -- if input parameter "keycode" enum is rightshift or insert then, i like using right shift or insert
		MenuGui.Enabled = not MenuGui.Enabled -- menu on if off or vice versa
	end

	if waitingforKey then -- if we are waiting for an aimbot key then
		if input.UserInputType == Enum.UserInputType.Keyboard then -- if the next input type recieved is a keyboard input then
			Settings.AimbotKey = input.KeyCode -- aimbot key = recieved key
			AimbotKeyButton.Text = ""..tostring(Settings.AimbotKey).."" -- update text
		elseif input.UserInputType == Enum.UserInputType.MouseButton1 then -- if input type is mouse 1, for some reason also fires on mouse 2 and mouse 3
			Settings.AimbotKey = Enum.UserInputType.MouseButton1 -- change to m1
			AimbotKeyButton.Text = ""..tostring(Settings.AimbotKey).."" -- text update
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then -- m2, still fires on m1 and m3
			Settings.AimbotKey = Enum.UserInputType.MouseButton2 -- change to m2
			AimbotKeyButton.Text = ""..tostring(Settings.AimbotKey).."" -- txt upd
		end
		waitingforKey = false -- after we get our key shut off waiting for key
	end

	if input.KeyCode == Settings.AimbotKey then -- if aim key is pressed
		Settings.AimbotAiming = true -- aimbot aiming is now true
	elseif Settings.AimbotKey == Enum.UserInputType.MouseButton1 then
		if Enum.UserInputType.MouseButton1 then -- same thing for m1
			Settings.AimbotAiming = true
		end
	elseif Settings.AimbotKey == Enum.UserInputType.MouseButton2 then
		if Enum.UserInputType.MouseButton2 then -- and m2
			Settings.AimbotAiming = true
		end
	end
end)

function UpdateTime() -- for watermark! update the time since injection
	Seconds = Seconds + 1 -- seconds var = current value + 1

	if Seconds == 60 then -- if the seconds are 60 then minutes becomes current minutes value + 1 and seconds are reset to 0
		Minutes = Minutes + 1
		Seconds = 00
	end

	if Minutes == 60 then -- same thing but for hours
		Hours = Hours + 1
		Minutes = 0
	end

	WatermarkBase.Text = "Ninelives "..Version.." | "..LocalPlayer.Name.." | "..Format(Hours)..":"..Format(Minutes)..":"..Format(Seconds).."" -- setting the text, first we have the name and version, next we have the players name, finally we have our time since injection
end

coroutine.wrap(function() -- isolated function that spins player
	while true do
		if Settings.AntiAim then -- if aa then
			LocalPlayer.Character:SetPrimaryPartCFrame(LocalPlayer.Character.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(Settings.AntiAimSpinSpeed), 0)) -- change cframe to angle 0,math.rad(aaspinspeed),0 aka spin the player
		end
		wait(0.03) -- do this every 0.03 seconds, the higher the value the choppier the spin
	end
end)()

coroutine.wrap(function() -- isolated function that flips the aa
	while wait() do
		if Settings.AntiAim and Settings.AntiAimFlip then
			flipRight()
			wait(Settings.AntiAimFlipSpeed)
			flipLeft()
			wait(Settings.AntiAimFlipSpeed)
		end
	end
end)()

coroutine.wrap(function() -- isolated function that executes fake lag every however fast fakelag speed is
	while wait(Settings.FakeLagSpeed) do
		FakeLag()
	end
end)()

coroutine.wrap(function() -- isolated function that updates croshair position
	game:GetService("RunService").RenderStepped:Connect(function()
		Crosshair.Position = UDim2.new(0, UserInputService:GetMouseLocation().X, 0, UserInputService:GetMouseLocation().Y)
	end)
end)()

coroutine.wrap(function() -- isolated function that updates the time every second so it acts like a real timer
	while wait(1) do
		UpdateTime()
	end
end)()
